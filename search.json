[{"path":"https://rdinnager.github.io/fofpack/articles/assignments.html","id":"installing-fofpack","dir":"Articles","previous_headings":"","what":"Installing fofpack","title":"Forests of the Future: How to Complete and Submit Assignments","text":"fofpack package includes data assignments necessary course Forests Future. regularly updated necessary frequently reinstall package make sure recent update. document shows install fofpack first time. procedure re-install exactly . following update fofpack latest available version. first thing need make sure R package devtools installed. devtools installed, can run following: Note devtools installed properly library(devtools) fail error. case, try installing devtools . dependencies = TRUE upgrade = TRUE force installation upgrading package dependencies fofpack, install dependencies manually. output command depend package installed already. run code might get dialog box like :  need make choice installation proceed. recommend choosing ‘’, since need install source time (just means package ‘compiled’ computer instead simply downloading ‘precompiled’ package.) installation might get warning like : Installation Warning cases can ignored package restored old version. get rid warning, musr clear workspace restart R. issue happens package use R tried reinstall . generally happens Windows. test fofpack installed properly, run library(fofpack), make sure get errors. ###Important: make sure fofpack successfully updated latest version run: fofpack date function warn provide instructions date. fofpack installed, assignments appear ‘Tutorial’ pane RStudio, prefixed week (e.g. Week 3: Visualising Tidy Data). appear, try restarting R clicking ‘Session’, ‘Restart R’ RStudio menu: Restart R Screenshot","code":"if(!require(devtools)) {   install.packages(\"devtools\") } #> Loading required package: devtools #> Warning in library(package, lib.loc = lib.loc, character.only = TRUE, #> logical.return = TRUE, : there is no package called 'devtools' #> Installing package into '/home/runner/work/_temp/Library' #> (as 'lib' is unspecified) #> also installing the dependencies 'credentials', 'zip', 'gitcreds', 'ini', 'gert', 'gh', 'xopen', 'usethis', 'miniUI', 'pkgbuild', 'profvis', 'rcmdcheck', 'remotes', 'roxygen2', 'rversions', 'urlchecker' library(devtools) #> Loading required package: usethis install_github(\"rdinnager/fofpack\", dependencies = TRUE, upgrade = TRUE) #> Using github PAT from envvar GITHUB_PAT #> Downloading GitHub repo rdinnager/fofpack@HEAD #>  #> * checking for file ‘/tmp/Rtmpi0tpBK/remotes601d74831025/rdinnager-fofpack-61c79c7/DESCRIPTION’ ... OK #> * preparing ‘fofpack’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #>   NB: this package now depends on R (>= 3.5.0) #>   WARNING: Added dependency on R >= 3.5.0 because serialized objects in #>   serialize/load version 3 cannot be read in older versions of R. #>   File(s) containing such objects: #>     ‘fofpack/data/FL_Forest.rda’ ‘fofpack/data/NJ_Forest.rda’ #>     ‘fofpack/data/Week3_FloridaForest.rda’ #> * building ‘fofpack_0.0.0.9010.tar.gz’ #> Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  : #>   storing paths of more than 100 bytes is not portable: #>   ‘fofpack/inst/tutorials/week_6_lecture/images/2022-09-23 15_09_30-Week 5 Lecture Introduction to Species Distribution Modelling (SDM).pdf - Work -.png’ #> Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  : #>   storing paths of more than 100 bytes is not portable: #>   ‘fofpack/inst/tutorials/week_6_lecture/images/A+single+niche+axis+e.g.,+pH,+temperature,+or+soil+moisture.jpg’ #> Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  : #>   storing paths of more than 100 bytes is not portable: #>   ‘fofpack/vignettes/images/2022-09-23 15_09_30-Week 5 Lecture Introduction to Species Distribution Modelling (SDM).pdf - Work -.png’ #> Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  : #>   using GNU extension for long pathname #> Installing package into '/home/runner/work/_temp/Library' #> (as 'lib' is unspecified) library(fofpack) #> Loading required package: tidymodels #> ── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ── #> ✔ broom        1.0.1      ✔ recipes      1.0.2  #> ✔ dials        1.0.0      ✔ rsample      1.1.0  #> ✔ dplyr        1.0.10     ✔ tibble       3.1.8  #> ✔ ggplot2      3.3.6      ✔ tidyr        1.2.1  #> ✔ infer        1.0.3      ✔ tune         1.0.1  #> ✔ modeldata    1.0.1      ✔ workflows    1.1.0  #> ✔ parsnip      1.0.2      ✔ workflowsets 1.0.0  #> ✔ purrr        0.3.5      ✔ yardstick    1.1.0 #> ── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ── #> ✖ recipes::check() masks devtools::check() #> ✖ purrr::discard() masks scales::discard() #> ✖ dplyr::filter()  masks stats::filter() #> ✖ dplyr::lag()     masks stats::lag() #> ✖ recipes::step()  masks stats::step() #> • Use suppressPackageStartupMessages() to eliminate package startup messages #> Loading required package: tidyverse #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ── #> ✔ readr   2.1.3     ✔ forcats 0.5.2 #> ✔ stringr 1.4.1      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ readr::col_factor() masks scales::col_factor() #> ✖ purrr::discard()    masks scales::discard() #> ✖ dplyr::filter()     masks stats::filter() #> ✖ stringr::fixed()    masks recipes::fixed() #> ✖ dplyr::lag()        masks stats::lag() #> ✖ readr::spec()       masks yardstick::spec() fofpack_up_to_date() #> package is up-to-date devel version #> package is up-to-date devel version #> Everything looks up to date for fofpack!"},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/assignments.html","id":"assignment-in-the-tutorial-pane","dir":"Articles","previous_headings":"Doing Assignments","what":"Assignment in the ‘Tutorial’ Pane:","title":"Forests of the Future: How to Complete and Submit Assignments","text":"Tutorial Pane Screenshot Click ‘Start Tutorial’ button render load assignment. reason assignment still showing ‘Tutorial’ pane, even restarting R, can run assignment typing learnr::run_tutorial(\"week_?\", \"fofpack\") R console, replacing ? week number desired assignment (e.g. learnr::run_tutorial(\"week_3\", \"fofpack\")). look something like : Tutorial Screenshot Go assignment, following instructions. Code boxes ‘Submit Answer’ box required completed full marks. Note ‘Submit Answer’ button currently anything run code box. Submit Button","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/assignments.html","id":"submitting-your-work","dir":"Articles","previous_headings":"","what":"Submitting Your Work","title":"Forests of the Future: How to Complete and Submit Assignments","text":"actually submit answers use ‘Submit’ section assignment. Click ‘Submit’ section left hand navigation bar assignment Submit Section look like : Submit Page Click ‘Generate’ button ready submit (e.g. filled required code boxes answered questions). generate text code like : Hash Code called ‘hash’ code, answers encrypted within . can retrieve answers code submit Canvas. Next, click ‘Copy hash clipboard’  button copy hash code. paste assignment Canvas. Canvas paste copied hash code assignment text box: Canvas Submit Please add additional text text box corrupt hash code won’t able retrieve answers. need add additional information please use ‘comment’ field.","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/assignments.html","id":"saving-your-work","dir":"Articles","previous_headings":"","what":"Saving Your Work","title":"Forests of the Future: How to Complete and Submit Assignments","text":"Progress assignment saved automatically close reopen , lose anything. left side assignment small ‘Start ’ button. careful! click assignment reset lose work! Individual exercises can also reset using ‘Start ’ button code box: Start Box","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"last-week","dir":"Articles","previous_headings":"","what":"Last week","title":"Forests of the Future: Week 10 Lecture","text":"saw spatial cross validation tidymodels downloaded occurrence points species using GBIF","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"occurrence-data","dir":"Articles","previous_headings":"","what":"Occurrence Data","title":"Forests of the Future: Week 10 Lecture","text":"now every model occurrence done using Presence / Absence data sites knew species present knew absent model estimate variation ‘probability’ occurrence across different sites Occurrence point data downloaded places know species Present (Absence data)","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"how-to-model-presence-only-data","dir":"Articles","previous_headings":"","what":"How to Model Presence-Only Data","title":"Forests of the Future: Week 10 Lecture","text":"tried put data model , model unable choose sensible model variation model explain Therefore model always predicts presence equivalently good need introduce variation","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"what-really-varies-in-presence-absence-data","dir":"Articles","previous_headings":"","what":"What Really Varies in Presence-Absence Data?","title":"Forests of the Future: Week 10 Lecture","text":"Density! Points higher density areas lower others","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"what-is-density","dir":"Articles","previous_headings":"","what":"What is Density?","title":"Forests of the Future: Week 10 Lecture","text":"Density continuous analog counts Density count per unit area, limit infinitesimal area (two dimensional space) estimate density continuous space, need use integration","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"quadrature","dir":"Articles","previous_headings":"","what":"Quadrature","title":"Forests of the Future: Week 10 Lecture","text":"simple way estimate integral sample space randomly regularly, estimate value sample, take weighted sum sample. Noting models estimate expectation function (can formulated weighted sum), can make model predict density points space using random regular ‘background’ points, often called ‘pseudo-absences’. order estimate true density requires carefully choosing observation weights applying model fitting, models allow weighting. Without appropriate weighting can still say model produces estimates proportional density, often good enough. often just want know species less likely , exact probability (although useful , possible).","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"example-of-pseudo-absences","dir":"Articles","previous_headings":"","what":"Example of Pseudo-absences","title":"Forests of the Future: Week 10 Lecture","text":"Use tidysdm","code":"library(rgbif) library(tidysdm) library(spatialsample)  sachsia <- occ_download_get(\"0107668-220831081235567\") %>%   occ_download_import() ## Download file size: 0 MB ## On disk at ./0107668-220831081235567.zip ## convert to sf sachsia <- sachsia %>%   select(long = decimalLongitude,          lat = decimalLatitude) %>%   st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)  mapview(sachsia) ## Warning in cbind(`Feature ID` = fid, mat): number of rows of result is not a ## multiple of vector length (arg 1)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"create-background-area","dir":"Articles","previous_headings":"","what":"Create Background Area","title":"Forests of the Future: Week 10 Lecture","text":"","code":"bg <- create_background(sachsia, buffer = 20000, max_bg = florida) mapview(bg)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"sample-pseudo-absences","dir":"Articles","previous_headings":"","what":"Sample Pseudo-Absences","title":"Forests of the Future: Week 10 Lecture","text":"","code":"sachsia_dat <- sdm_data(sachsia, bg = bg, n = 10000) sachsia_dat ## Simple feature collection with 10032 features and 2 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -81.56721 ymin: 24.4205 xmax: -80.16127 ymax: 25.79203 ## Geodetic CRS:  WGS 84 ## # A tibble: 10,032 × 3 ##                    pnts present pnt_origin ##  *          <POINT [°]> <fct>   <chr>      ##  1 (-80.69476 25.39784) present data       ##  2 (-80.63322 25.40324) present data       ##  3  (-80.6333 25.40328) present data       ##  4 (-80.69095 25.39616) present data       ##  5 (-80.62141 25.39301) present data       ##  6 (-80.38955 25.54626) present data       ##  7 (-80.63322 25.40085) present data       ##  8 (-80.51267 25.43387) present data       ##  9   (-80.657 25.40336) present data       ## 10 (-80.39395 25.54607) present data       ## # … with 10,022 more rows mapview(sachsia_dat, zcol = \"present\")"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"add-environmental-variables","dir":"Articles","previous_headings":"","what":"Add environmental variables","title":"Forests of the Future: Week 10 Lecture","text":"","code":"sachsia_dat <- add_env_vars(sachsia_dat, bioclim_fl) sachsia_dat ## Simple feature collection with 10032 features and 21 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -81.56721 ymin: 24.4205 xmax: -80.16127 ymax: 25.79203 ## Geodetic CRS:  WGS 84 ## # A tibble: 10,032 × 22 ##                    pnts present pnt_origin  BIO1  BIO2  BIO3  BIO4  BIO5  BIO6 ##  *          <POINT [°]> <fct>   <chr>      <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> ##  1 (-80.69476 25.39784) present data        24.2  28.0  20.0  1360   235    39 ##  2 (-80.63322 25.40324) present data        24.2  27.9  19.9  1386   238    35 ##  3  (-80.6333 25.40328) present data        24.2  27.9  19.9  1386   238    35 ##  4 (-80.69095 25.39616) present data        24.2  28.0  20.0  1364   235    38 ##  5 (-80.62141 25.39301) present data        24.2  27.9  20.0  1388   238    37 ##  6 (-80.38955 25.54626) present data        24.3  27.9  20.2  1464   246    35 ##  7 (-80.63322 25.40085) present data        24.2  27.9  19.9  1386   238    35 ##  8 (-80.51267 25.43387) present data        24.2  27.9  20    1417   241    37 ##  9   (-80.657 25.40336) present data        24.2  27.9  20.0  1376   237    36 ## 10 (-80.39395 25.54607) present data        24.3  27.9  20.1  1467   246    35 ## # … with 10,022 more rows, and 13 more variables: BIO7 <dbl>, BIO8 <dbl>, ## #   BIO9 <dbl>, BIO10 <dbl>, BIO11 <dbl>, BIO12 <dbl>, BIO13 <dbl>, ## #   BIO14 <dbl>, BIO15 <dbl>, BIO16 <dbl>, BIO17 <dbl>, BIO18 <dbl>, ## #   BIO19 <dbl>"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"remove-nas","dir":"Articles","previous_headings":"","what":"Remove NAs","title":"Forests of the Future: Week 10 Lecture","text":"","code":"sachsia_dat <- sachsia_dat %>%   drop_na(BIO1:BIO19) mapview(st_sf(sachsia_dat), zcol = \"present\") mapview(st_sf(sachsia_dat), zcol = \"BIO1\")"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"make-a-recipe","dir":"Articles","previous_headings":"","what":"Make a recipe","title":"Forests of the Future: Week 10 Lecture","text":"Let’s transformations","code":"sachsia_recipe <- recipe(sachsia_dat,                          vars = c(\"present\",                                   sachsia_dat %>% select(BIO1:BIO19) %>% colnames()),                          roles = c(\"outcome\", rep(\"predictor\", 19))) %>%   step_YeoJohnson(all_predictors()) %>%   step_normalize(all_predictors())  sachsia_recipe ## Recipe ##  ## Inputs: ##  ##       role #variables ##    outcome          1 ##  predictor         19 ##  ## Operations: ##  ## Yeo-Johnson transformation on all_predictors() ## Centering and scaling for all_predictors()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"make-model-and-workflow","dir":"Articles","previous_headings":"","what":"Make Model and Workflow","title":"Forests of the Future: Week 10 Lecture","text":"","code":"sachsia_mod <- rand_forest() %>%   set_engine(\"ranger\") %>%   set_mode(\"classification\")  sachsia_wf <- workflow() %>%   add_recipe(sachsia_recipe) %>%   add_model(sachsia_mod)  sachsia_wf ## ══ Workflow ════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: rand_forest() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Random Forest Model Specification (classification) ##  ## Computational engine: ranger"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"fit-workflow","dir":"Articles","previous_headings":"","what":"Fit Workflow","title":"Forests of the Future: Week 10 Lecture","text":"","code":"sachsia_fit <- sachsia_wf %>%   fit(sachsia_dat)  sachsia_fit ## ══ Workflow [trained] ══════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: rand_forest() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Ranger result ##  ## Call: ##  ranger::ranger(x = maybe_data_frame(x), y = y, num.threads = 1,      verbose = FALSE, seed = sample.int(10^5, 1), probability = TRUE)  ##  ## Type:                             Probability estimation  ## Number of trees:                  500  ## Sample size:                      9511  ## Number of independent variables:  19  ## Mtry:                             4  ## Target node size:                 10  ## Variable importance mode:         none  ## Splitrule:                        gini  ## OOB prediction error (Brier s.):  0.002885645"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"make-a-prediction-dataset","dir":"Articles","previous_headings":"","what":"Make a prediction dataset","title":"Forests of the Future: Week 10 Lecture","text":"want make predictions landscape Use grid:","code":"sachsia_grid <- sdm_data(sachsia, bg,                          5000, sample_options = list(type = \"regular\")) %>%   filter(present == \"absent\") ## although coordinates are longitude/latitude, st_sample assumes that they are planar mapview(sachsia_grid)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"add-environmental-variable-and-predict","dir":"Articles","previous_headings":"","what":"Add environmental variable and predict","title":"Forests of the Future: Week 10 Lecture","text":"","code":"sachsia_grid_dat <- add_env_vars(sachsia_grid, bioclim_fl) %>%   drop_na(BIO1:BIO19)  sachsia_grid_dat ## # A tibble: 4,716 × 22 ##                    pnts present pnt_origin  BIO1  BIO2  BIO3  BIO4  BIO5  BIO6 ##             <POINT [°]> <fct>   <chr>      <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> ##  1  (-81.5532 24.61569) absent  pseudo      25.1  28.5  21.3  1054   152    40 ##  2  (-81.5532 24.62482) absent  pseudo      25.1  28.5  21.3  1068   152    42 ##  3 (-81.54407 24.62482) absent  pseudo      25.1  28.5  21.3  1057   153    41 ##  4 (-81.53494 24.62482) absent  pseudo      25.1  28.5  21.3  1056   153    40 ##  5 (-81.52581 24.62482) absent  pseudo      25.1  28.5  21.3  1058   154    40 ##  6  (-81.5532 24.63395) absent  pseudo      25.1  28.5  21.3  1068   153    42 ##  7 (-81.54407 24.63395) absent  pseudo      25.1  28.5  21.3  1072   153    43 ##  8 (-81.51668 24.63395) absent  pseudo      25.1  28.5  21.2  1078   154    43 ##  9 (-81.56233 24.64308) absent  pseudo      25.0  28.4  21.2  1053   153    41 ## 10 (-81.51668 24.64308) absent  pseudo      25.1  28.5  21.2  1085   154    44 ## # … with 4,706 more rows, and 13 more variables: BIO7 <dbl>, BIO8 <dbl>, ## #   BIO9 <dbl>, BIO10 <dbl>, BIO11 <dbl>, BIO12 <dbl>, BIO13 <dbl>, ## #   BIO14 <dbl>, BIO15 <dbl>, BIO16 <dbl>, BIO17 <dbl>, BIO18 <dbl>, ## #   BIO19 <dbl> sachsia_preds <- sachsia_fit %>%    augment(sachsia_grid_dat)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"plot-predictions","dir":"Articles","previous_headings":"","what":"Plot predictions","title":"Forests of the Future: Week 10 Lecture","text":"","code":"coords <- st_coordinates(st_sf(sachsia_preds)) ggplot(sachsia_preds %>% bind_cols(coords), aes(X, Y)) +   geom_sf(data = florida, inherit.aes = FALSE) +   geom_raster(aes(fill = .pred_present + 0.0001)) +   geom_sf(data = sachsia, inherit.aes = FALSE, colour = \"red\") +   scale_fill_continuous(name = \"Probability of Occurrence\",                         trans = \"logit\") +   coord_sf(ylim = c(24.5, 25.9), xlim = c(-81.6, -79.8)) +   theme_minimal() ## Warning: Raster pixels are placed at uneven horizontal intervals and will be ## shifted. Consider using geom_tile() instead. ## Warning: Raster pixels are placed at uneven vertical intervals and will be ## shifted. Consider using geom_tile() instead."},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"final-projects","dir":"Articles","previous_headings":"","what":"Final Projects","title":"Forests of the Future: Week 10 Lecture","text":"Next week try full SDM GBIF data lectures, classes working Hand end next week assignment week assignment can used part final project","code":""},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_1.html","id":"next-class","dir":"Articles","previous_headings":"","what":"Next Class","title":"Forests of the Future: Week 10 Lecture","text":"Poisson regression count data weight points model make output interpretable Evaluating SDM Final Projects","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"last-class","dir":"Articles","previous_headings":"","what":"Last class","title":"Forests of the Future: Week 10 Lecture Part 2","text":"saw add ‘pseudo-absences’ presence-data set make modelling possible","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"this-class","dir":"Articles","previous_headings":"","what":"This class","title":"Forests of the Future: Week 10 Lecture Part 2","text":"spatial cross validation presence / pseudo-absence data Talk final project","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"an-example-sdm","dir":"Articles","previous_headings":"","what":"An example SDM","title":"Forests of the Future: Week 10 Lecture Part 2","text":"Let’s run full SDM analysis use example dataset ENMTools package","code":"library(ENMTools) library(tidyverse) library(tidymodels) library(spatialsample) library(tidysdm) library(sf) library(mapview)  data(\"iberolacerta.clade\") data(\"euro.worldclim\") monticola <- iberolacerta.clade$species$monticola  monticola <- st_as_sf(monticola$presence.points,                        coords = c(\"Longitude\", \"Latitude\"),                       crs = 4326) mapview(monticola) ## Warning in cbind(`Feature ID` = fid, mat): number of rows of result is not a ## multiple of vector length (arg 1)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"create-background-area","dir":"Articles","previous_headings":"","what":"Create Background Area","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"bg <- create_background(monticola, method = \"ecoregion\") mapview(bg)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"sample-pseudo-absences","dir":"Articles","previous_headings":"","what":"Sample Pseudo-Absences","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_dat <- sdm_data(monticola, bg = bg, n = 10000) monticola_dat ## Simple feature collection with 10260 features and 2 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -9.252936 ymin: 36.61092 xmax: 2.587413 ymax: 46.23354 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    present pnt_origin                       pnts ## 1  present       data POINT (-5.171215 43.06957) ## 2  present       data POINT (-6.036635 43.02531) ## 3  present       data POINT (-7.679727 40.38852) ## 4  present       data POINT (-7.790437 40.30959) ## 5  present       data  POINT (-7.47334 43.78935) ## 6  present       data  POINT (-6.575039 42.9107) ## 7  present       data POINT (-5.132756 43.49572) ## 8  present       data POINT (-7.787378 40.39362) ## 9  present       data  POINT (-4.941888 43.3531) ## 10 present       data  POINT (-7.621731 40.3417) mapview(monticola_dat, zcol = \"present\")"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"add-environmental-variables","dir":"Articles","previous_headings":"","what":"Add environmental variables","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_dat <- add_env_vars(monticola_dat, euro.worldclim) monticola_dat ## Simple feature collection with 10260 features and 21 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -9.252936 ymin: 36.61092 xmax: 2.587413 ymax: 46.23354 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    present pnt_origin bio1 bio2 bio3 bio4 bio5 bio6 bio7 bio8 bio9 bio10 bio11 ## 1  present       data   78  100   40 5056  223  -26  249   52  145   146    18 ## 2  present       data   76  100   40 5052  220  -26  246   48  143   144    16 ## 3  present       data  137   94   38 5318  281   34  247   72  208   208    72 ## 4  present       data  129   88   36 5333  271   29  242   65  200   200    65 ## 5  present       data  140   76   42 3636  237   58  179  101  185   189    95 ## 6  present       data   84   99   40 5134  228  -19  247   28  152   152    23 ## 7  present       data  133   78   41 3998  235   45  190  115  184   186    84 ## 8  present       data  137   94   38 5318  281   34  247   72  208   208    72 ## 9  present       data  128   78   40 4073  233   39  194  111  180   183    78 ## 10 present       data  101   76   33 5359  236    7  229   39  173   173    39 ##    bio12 bio13 bio14 bio15 bio16 bio17 bio18 bio19                       pnts ## 1    917   113    48    24   305   169   171   251 POINT (-5.171215 43.06957) ## 2   1012   128    46    28   345   166   171   302 POINT (-6.036635 43.02531) ## 3   1143   172    11    55   465    72    72   465 POINT (-7.679727 40.38852) ## 4   1231   187    12    56   504    76    76   504 POINT (-7.790437 40.30959) ## 5    931   122    32    34   336   122   142   298  POINT (-7.47334 43.78935) ## 6   1012   129    39    32   358   145   145   328  POINT (-6.575039 42.9107) ## 7    822   110    40    28   284   145   160   213 POINT (-5.132756 43.49572) ## 8   1143   172    11    55   465    72    72   465 POINT (-7.787378 40.39362) ## 9    843   111    41    27   291   149   164   222  POINT (-4.941888 43.3531) ## 10  1514   234    15    57   621    92    92   621  POINT (-7.621731 40.3417)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"remove-nas","dir":"Articles","previous_headings":"","what":"Remove NAs","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_dat <- monticola_dat %>%   drop_na(bio1:bio19)  mapview(st_sf(monticola_dat), zcol = \"bio1\")"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"spatial-cross-validation","dir":"Articles","previous_headings":"","what":"Spatial Cross Validation","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"## presence only (po) spatial CV cv_folds_spat <- po_spatial_buffer_vfold_cv(monticola_dat, presence = \"present\", n = c(24, 16),                                              v = 9)  ## look at the spatial folds autoplot(cv_folds_spat) autoplot(cv_folds_spat$splits[[2]]) autoplot(cv_folds_spat$splits[[8]]) ## regular CV for comparison cv_folds <- vfold_cv(monticola_dat, 9)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"make-a-recipe","dir":"Articles","previous_headings":"","what":"Make a recipe","title":"Forests of the Future: Week 10 Lecture Part 2","text":"Let’s transformations","code":"monticola_recipe <- recipe(monticola_dat,                          vars = c(\"present\",                                   as_tibble(monticola_dat) %>% select(bio1:bio19) %>% colnames()),                          roles = c(\"outcome\", rep(\"predictor\", 19))) %>%   step_YeoJohnson(all_predictors()) %>%   step_normalize(all_predictors())  monticola_recipe ## Recipe ##  ## Inputs: ##  ##       role #variables ##    outcome          1 ##  predictor         19 ##  ## Operations: ##  ## Yeo-Johnson transformation on all_predictors() ## Centering and scaling for all_predictors()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"make-model-and-workflow","dir":"Articles","previous_headings":"","what":"Make Model and Workflow","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_mod <- rand_forest() %>%   set_engine(\"ranger\", importance = \"impurity\") %>%   set_mode(\"classification\")  monticola_wf <- workflow() %>%   add_recipe(monticola_recipe) %>%   add_model(monticola_mod)  monticola_wf ## ══ Workflow ════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: rand_forest() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Random Forest Model Specification (classification) ##  ## Engine-Specific Arguments: ##   importance = impurity ##  ## Computational engine: ranger"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"fit-workflow","dir":"Articles","previous_headings":"","what":"Fit Workflow","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_fit <- monticola_wf %>%   fit_resamples(cv_folds,                 control = control_resamples(extract = extract_fit_engine))  monticola_fit %>%   collect_metrics() ## # A tibble: 2 × 6 ##   .metric  .estimator  mean     n std_err .config              ##   <chr>    <chr>      <dbl> <int>   <dbl> <chr>                ## 1 accuracy binary     0.963     9 0.00206 Preprocessor1_Model1 ## 2 roc_auc  binary     0.938     9 0.00459 Preprocessor1_Model1"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"fit-workflow-with-spatial-cv","dir":"Articles","previous_headings":"","what":"Fit Workflow with Spatial CV","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_fit_spat <- monticola_wf %>%   fit_resamples(cv_folds_spat,                 control = control_resamples(extract = extract_fit_engine))  monticola_fit_spat %>%   collect_metrics() ## # A tibble: 2 × 6 ##   .metric  .estimator  mean     n std_err .config              ##   <chr>    <chr>      <dbl> <int>   <dbl> <chr>                ## 1 accuracy binary     0.968     9 0.00679 Preprocessor1_Model1 ## 2 roc_auc  binary     0.755     9 0.0397  Preprocessor1_Model1"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"look-at-folds-separately","dir":"Articles","previous_headings":"","what":"Look at folds separately","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_fit_spat$.metrics ## [[1]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.976 Preprocessor1_Model1 ## 2 roc_auc  binary         0.787 Preprocessor1_Model1 ##  ## [[2]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.983 Preprocessor1_Model1 ## 2 roc_auc  binary         0.687 Preprocessor1_Model1 ##  ## [[3]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.983 Preprocessor1_Model1 ## 2 roc_auc  binary         0.681 Preprocessor1_Model1 ##  ## [[4]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.974 Preprocessor1_Model1 ## 2 roc_auc  binary         0.559 Preprocessor1_Model1 ##  ## [[5]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.922 Preprocessor1_Model1 ## 2 roc_auc  binary         0.633 Preprocessor1_Model1 ##  ## [[6]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.952 Preprocessor1_Model1 ## 2 roc_auc  binary         0.885 Preprocessor1_Model1 ##  ## [[7]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.960 Preprocessor1_Model1 ## 2 roc_auc  binary         0.888 Preprocessor1_Model1 ##  ## [[8]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.985 Preprocessor1_Model1 ## 2 roc_auc  binary         0.819 Preprocessor1_Model1 ##  ## [[9]] ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.977 Preprocessor1_Model1 ## 2 roc_auc  binary         0.857 Preprocessor1_Model1"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"importance","dir":"Articles","previous_headings":"","what":"Importance","title":"Forests of the Future: Week 10 Lecture Part 2","text":"Let’s look importance values determined random forest variables.  ordering reasonably consistent different folds. Now, spatial folds:","code":"library(vip) ##  ## Attaching package: 'vip' ## The following object is masked from 'package:utils': ##  ##     vi library(patchwork) ##  ## Attaching package: 'patchwork' ## The following object is masked from 'package:raster': ##  ##     area monticola_fit %>%   unnest(.extracts) %>%   pull(.extracts) %>%   map(vip) %>%   wrap_plots(ncol = 3, nrow = 3) monticola_fit_spat %>%   unnest(.extracts) %>%   pull(.extracts) %>%   map(vip) %>%   wrap_plots(ncol = 3, nrow = 3)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"make-a-prediction-dataset","dir":"Articles","previous_headings":"","what":"Make a prediction dataset","title":"Forests of the Future: Week 10 Lecture Part 2","text":"want make predictions landscape Use grid:","code":"monticola_grid <- sdm_data(monticola, bg,                          5000, sample_options = list(type = \"regular\")) %>%   filter(present == \"absent\") ## although coordinates are longitude/latitude, st_sample assumes that they are planar mapview(monticola_grid)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"add-environmental-variable-and-predict","dir":"Articles","previous_headings":"","what":"Add environmental variable and predict","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"monticola_grid_dat <- add_env_vars(monticola_grid, euro.worldclim) %>%   drop_na(bio1:bio19)  monticola_grid_dat ## Simple feature collection with 3887 features and 21 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -9.230222 ymin: 39.02463 xmax: 2.584783 ymax: 46.13454 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    present pnt_origin bio1 bio2 bio3 bio4 bio5 bio6 bio7 bio8 bio9 bio10 bio11 ## 1   absent     pseudo  167   99   39 5204  315   65  250  112  233   237   104 ## 2   absent     pseudo  165  101   39 5367  318   62  256  109  234   238   101 ## 3   absent     pseudo  165  101   39 5367  318   62  256  109  234   238   101 ## 4   absent     pseudo  164  104   39 5538  321   57  264  105  236   239    97 ## 5   absent     pseudo  164  104   39 5538  321   57  264  105  236   239    97 ## 6   absent     pseudo  165  109   39 5712  328   53  275  104  239   241    96 ## 7   absent     pseudo  166  114   40 5895  334   49  285  102  243   244    94 ## 8   absent     pseudo  166  114   40 5895  334   49  285  102  243   244    94 ## 9   absent     pseudo  167  115   39 6007  337   46  291  101  245   246    93 ## 10  absent     pseudo  165  115   38 6117  339   44  295   98  246   246    90 ##    bio12 bio13 bio14 bio15 bio16 bio17 bio18 bio19                       pnts ## 1    670    93     5    56   271    39    40   271 POINT (-7.766416 39.02463) ## 2    674    93     5    55   272    40    41   271 POINT (-7.661859 39.02463) ## 3    674    93     5    55   272    40    41   271 POINT (-7.557301 39.02463) ## 4    669    91     5    55   268    40    41   266 POINT (-7.452744 39.02463) ## 5    669    91     5    55   268    40    41   266 POINT (-7.348186 39.02463) ## 6    636    85     5    53   252    40    41   247 POINT (-7.243628 39.02463) ## 7    594    80     5    52   233    39    39   226 POINT (-7.139071 39.02463) ## 8    594    80     5    52   233    39    39   226 POINT (-7.034513 39.02463) ## 9    552    75     4    51   215    36    37   205 POINT (-6.929956 39.02463) ## 10   534    72     4    51   206    35    36   194 POINT (-6.825398 39.02463) final_fit <- monticola_wf %>%   fit(monticola_dat)  monticola_preds <- final_fit %>%    augment(monticola_grid_dat)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"plot-predictions","dir":"Articles","previous_headings":"","what":"Plot predictions","title":"Forests of the Future: Week 10 Lecture Part 2","text":"","code":"coords <- st_coordinates(st_sf(monticola_preds)) ggplot(monticola_preds %>% bind_cols(coords), aes(X, Y)) +   geom_sf(data = bg, inherit.aes = FALSE) +   geom_raster(aes(fill = .pred_present + 0.0001)) +   geom_sf(data = monticola, inherit.aes = FALSE, colour = \"red\",           size = 1.2) +   scale_fill_continuous(name = \"Probability of Occurrence\",                         trans = \"logit\") +   theme_minimal() ## Warning: Raster pixels are placed at uneven vertical intervals and will be ## shifted. Consider using geom_tile() instead."},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"final-projects","dir":"Articles","previous_headings":"","what":"Final Projects","title":"Forests of the Future: Week 10 Lecture Part 2","text":"Next week try full SDM GBIF data lectures, classes working Hand end next week assignment week assignment can used part final project","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"final-projects-1","dir":"Articles","previous_headings":"","what":"Final Projects","title":"Forests of the Future: Week 10 Lecture Part 2","text":"Can done groups (max 6) individually, everyone hand work Groups can share code / work together working run models Project Plan Project Code Results Project Presentation (Lightning Talk) Details course website next week’s first class","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"project-plan-preliminary-research","dir":"Articles","previous_headings":"","what":"1. Project Plan (Preliminary Research)","title":"Forests of the Future: Week 10 Lecture Part 2","text":"Name chosen species Group members applicable Species: Background research species (including drawing academic article available), natural history. Variables: ideal world, variables useful model species, based discover biology? Models: kind model run? Research choose 1 method, briefly explain works best ability. hyper-parameters ? sections short (less 300 words)","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_10_lecture_2.html","id":"next-week","dir":"Articles","previous_headings":"","what":"Next Week","title":"Forests of the Future: Week 10 Lecture Part 2","text":"SDM GBIF data","code":""},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"species-distribution-modelling","dir":"Articles","previous_headings":"Forests of the Future Week 5","what":"Species Distribution Modelling","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Russell Dinnage","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"what-are-sdms","dir":"Articles","previous_headings":"","what":"What are SDMs","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Sometimes called Environmental Niche Models (ENMs, prefer SDM) Possible well-developed application classic Data Science Machine Learning (ML) Biology take data environment different sites parts landscape try predict (, many) organisms occur . Data species can also used Traditionally done single species time, ‘joint’ species distribution models increasingly common","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"sdms-as-data-science","dir":"Articles","previous_headings":"","what":"SDMs as Data Science","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"make SDM use Data Science workflow final model used predict species occurrence fit using Machine Learning techniques Data Model","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"data-and-models","dir":"Articles","previous_headings":"","what":"Data and Models","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Data Processing Steps Model Building Data feeds Models Models inform Data processing steps","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"data-science-steps","dir":"Articles","previous_headings":"","what":"Data Science Steps","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Question Collect Data Munge / Clean Data Transform Data Model Analyze Data using Model Tune Model Validate / Test Model Interpret Model","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"data-science-steps-1","dir":"Articles","previous_headings":"","what":"Data Science Steps","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Question Collect Data Munge / Clean Data Transform Data Model Analyze Data using Model Tune Model Validate / Test Model Interpret Model covered already cover rest next 4 weeks","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"what-is-a-model","dir":"Articles","previous_headings":"","what":"What is a Model?","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Encodes relationship set inputs outputs SDM (potentially complex nonlinear) function takes environmental variables input output occurrence pattern (abundance, probability, suitability, etc.) Different Models differ assumptions, ‘inductive biases’, parameters Parameters chosen based well Model’s output matches real data optimization problem","code":""},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"the-linear-model","dir":"Articles","previous_headings":"The Simplest Model?","what":"The Linear Model","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Models outputs ‘linear’ function inputs Inputs ‘predictor’ variables Outputs predictions, compared ‘response’ variable(s) Assumes responses additive linear function predictors","code":""},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"setup","dir":"Articles","previous_headings":"Fit a Linear Model to Reef Fish Data","what":"Setup","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"","code":"library(fofpack) library(tidyverse) library(tidymodels)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-to-reef-fish-data-1","dir":"Articles","previous_headings":"","what":"Fit a Linear Model to Reef Fish Data","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Base R good collection statistical methods including linear model. RF_abund data abundance different reef species different reefs around world","code":"data(\"RF_abund\") RF_abund ## # A tibble: 781,983 × 25 ##    SpeciesName   SiteC…¹ Abund…² Sampl…³ MeanT…⁴ MinTe…⁵ MaxTe…⁶ SDTem…⁷ ECOre…⁸ ##    <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <fct>   ##  1 Abudefduf be… ACEH1         0     476    29.0    28.1    30.0   0.587 Wester… ##  2 Abudefduf be… ACEH10        0     476    29.1    28.1    30.1   0.602 Wester… ##  3 Abudefduf be… ACEH11        0     476    29.0    28.1    30.0   0.587 Wester… ##  4 Abudefduf be… ACEH12        0     476    29.0    28.1    30.0   0.587 Wester… ##  5 Abudefduf be… ACEH13        0     476    29.0    28.1    29.9   0.522 Wester… ##  6 Abudefduf be… ACEH14        0     476    29.0    28.2    30.0   0.526 Wester… ##  7 Abudefduf be… ACEH15        0     476    29.1    28.1    30.0   0.580 Wester… ##  8 Abudefduf be… ACEH16        0     476    29.0    28.1    30.0   0.587 Wester… ##  9 Abudefduf be… ACEH17        0     476    29.0    28.1    30.0   0.587 Wester… ## 10 Abudefduf be… ACEH18        0     476    29.1    28.1    30.1   0.581 Wester… ## # … with 781,973 more rows, 16 more variables: Presence <dbl>, OLRE <fct>, ## #   MaxAbundance <dbl>, N_Obs <int>, Confidence_NObs <dbl>, T_Range_Obs <dbl>, ## #   Confidence_TRange_Obs <dbl>, N_Absences_T_Upper <int>, ## #   N_Absences_T_Lower <int>, Confidence_Occ_Tupper <dbl>, ## #   Confidence_Occ_Tlower <dbl>, T_Upper_Absences <dbl>, ## #   T_Lower_Absences <dbl>, T_Mean_Absences <dbl>, NEOLI <dbl>, ## #   Depth_Site <dbl>, and abbreviated variable names ¹​SiteCode, …"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-to-reef-fish-data-2","dir":"Articles","previous_headings":"","what":"Fit a Linear Model to Reef Fish Data","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"First let’s choose fish species model Thalassoma pavo: Ornate Wrasse","code":"knitr::include_graphics(\"images/week_5_lecture_insertimage_2.png\") fish_dat <- RF_abund %>%   filter(SpeciesName == \"Thalassoma pavo\")"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-to-reef-fish-data-3","dir":"Articles","previous_headings":"","what":"Fit a Linear Model to Reef Fish Data","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"lm() basic linear model function R. Let’s linear model fish species temperature predictor","code":"mod <- lm(   AbundanceAdult40 ~ MeanTemp_CoralWatch,    data = fish_dat)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"r-formulas","dir":"Articles","previous_headings":"","what":"R ‘formulas’","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"formula special data structure R specified using expression form: lhs ~ rhs, lhs stands Left Hand Side, rhs stands Right Hand Side. Formulas compactly express relationship variables: lhs contains ‘response’ variables wish model function variables rhs: ‘predictor’ variable lhs rhs can contain multiple variables function calls (see examples later ) Though formula can missing lhs, must always ~ rhs (~ rhs valid formula)","code":"mod <- lm(   ### <b>   AbundanceAdult40 ~ MeanTemp_CoralWatch,    ### <\/b>   data = fish_dat) summary(mod) ##  ## Call: ## lm(formula = AbundanceAdult40 ~ MeanTemp_CoralWatch, data = fish_dat) ##  ## Residuals: ##    Min     1Q Median     3Q    Max  ## -42.81 -14.23  -9.13  -2.93 898.16  ##  ## Coefficients: ##                     Estimate Std. Error t value Pr(>|t|)    ## (Intercept)          -47.326     22.506  -2.103  0.03614 *  ## MeanTemp_CoralWatch    3.274      1.147   2.853  0.00457 ** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 54.3 on 383 degrees of freedom ## Multiple R-squared:  0.02081,    Adjusted R-squared:  0.01825  ## F-statistic: 8.139 on 1 and 383 DF,  p-value: 0.004567"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-to-reef-fish-data-4","dir":"Articles","previous_headings":"","what":"Fit a Linear Model to Reef Fish Data","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"much easier tell model useful visualizing.","code":"ggplot(fish_dat, aes(x = MeanTemp_CoralWatch, y = AbundanceAdult40)) +   geom_smooth(method = lm, se = FALSE, color = \"red\") + geom_point() + theme_minimal() ## `geom_smooth()` using formula 'y ~ x'"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-to-reef-fish-data-5","dir":"Articles","previous_headings":"","what":"Fit a Linear Model to Reef Fish Data","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Models assumptions data fit assumptions? won’t go linear model assumption, one distribution data extreme (skewed, long tails)","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-to-reef-fish-data-6","dir":"Articles","previous_headings":"","what":"Fit a Linear Model to Reef Fish Data","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Distribution Abundance:","code":"hist(fish_dat$AbundanceAdult40, breaks = 100)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-to-reef-fish-data-7","dir":"Articles","previous_headings":"","what":"Fit a Linear Model to Reef Fish Data","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"One way ‘fix’ data transform , example:  However main problem seems stem fact line good description response. Therefore, SDM methods actually used allow non-linear relationships. case (many cases), kind hump shaped function might make sense.","code":"hist(log(fish_dat$AbundanceAdult40), breaks = 50) p <- ggplot(fish_dat, aes(x = MeanTemp_CoralWatch, y = AbundanceAdult40)) +   geom_smooth(se = FALSE, color = \"red\") + geom_point() + theme_minimal() suppressMessages(print(p))"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"tidymodels","dir":"Articles","previous_headings":"","what":"tidymodels","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"tidymodels R package statistical machine learning models shares philosophy programming data analysis tidyverse functions mirror step Data Science presented earlier Like tidyverse meta-package, bundling several packages together","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"parsnip-a-tidymodels-package-to-fit-models","dir":"Articles","previous_headings":"","what":"parsnip: a tidymodels package to fit models","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"parsnip separates model ‘structure’ implementation unifies inputs outputs, simple switch different modelling methods without writing new code","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-with-parsnip","dir":"Articles","previous_headings":"","what":"Fit a Linear Model with parsnip","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"","code":"mod_pars <- linear_reg(engine = \"lm\") mod_pars ## Linear Regression Model Specification (regression) ##  ## Computational engine: lm"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-with-parsnip-1","dir":"Articles","previous_headings":"","what":"Fit a Linear Model with parsnip","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"model fit using fit() function parsnip designed work pipe operators (%>% |>)","code":"mod_pars <- linear_reg(engine = \"lm\") %>%   fit(AbundanceAdult40 ~ MeanTemp_CoralWatch,       data = fish_dat) mod_pars ## parsnip model object ##  ##  ## Call: ## stats::lm(formula = AbundanceAdult40 ~ MeanTemp_CoralWatch, data = data) ##  ## Coefficients: ##         (Intercept)  MeanTemp_CoralWatch   ##             -47.326                3.274"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-with-parsnip-2","dir":"Articles","previous_headings":"","what":"Fit a Linear Model with parsnip","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Parameters extracted tidy() function.","code":"mod_summ <- tidy(mod_pars) mod_summ ## # A tibble: 2 × 5 ##   term                estimate std.error statistic p.value ##   <chr>                  <dbl>     <dbl>     <dbl>   <dbl> ## 1 (Intercept)           -47.3      22.5      -2.10 0.0361  ## 2 MeanTemp_CoralWatch     3.27      1.15      2.85 0.00457"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fit-a-linear-model-with-parsnip-3","dir":"Articles","previous_headings":"","what":"Fit a Linear Model with parsnip","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Visualize fit prediction","code":"preds <- predict(mod_pars, new_data = fish_dat) preds ## # A tibble: 385 × 1 ##    .pred ##    <dbl> ##  1  9.92 ##  2 13.4  ##  3 13.4  ##  4 14.6  ##  5 13.4  ##  6 13.4  ##  7 14.4  ##  8 13.3  ##  9 14.4  ## 10 14.9  ## # … with 375 more rows pred_dat <- fish_dat %>%   bind_cols(preds) p <- ggplot(pred_dat, aes(x = MeanTemp_CoralWatch, y = .pred)) +   geom_line() + geom_point(aes(y = AbundanceAdult40)) +    theme_minimal() suppressMessages(print(p)) p <- ggplot(pred_dat, aes(x = MeanTemp_CoralWatch, y = .pred)) +   geom_line() + geom_point(aes(y = AbundanceAdult40)) +    scale_y_continuous(trans = \"log1p\") + theme_minimal() suppressMessages(print(p))"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"the-power-of-parsnip","dir":"Articles","previous_headings":"","what":"The power of parsnip","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Now model specified parsnip, easy change model one can model nonlinear relationships easily. Let’s try gradient boosted decision tree (don’t need know now).","code":"mod_pars2 <- boost_tree(mode = \"regression\") %>%   fit(AbundanceAdult40 ~ MeanTemp_CoralWatch,       data = fish_dat) mod_pars2 ## parsnip model object ##  ## ##### xgb.Booster ## raw: 47.7 Kb  ## call: ##   xgboost::xgb.train(params = list(eta = 0.3, max_depth = 6, gamma = 0,  ##     colsample_bytree = 1, colsample_bynode = 1, min_child_weight = 1,  ##     subsample = 1), data = x$data, nrounds = 15, watchlist = x$watchlist,  ##     verbose = 0, nthread = 1, objective = \"reg:squarederror\") ## params (as set within xgb.train): ##   eta = \"0.3\", max_depth = \"6\", gamma = \"0\", colsample_bytree = \"1\", colsample_bynode = \"1\", min_child_weight = \"1\", subsample = \"1\", nthread = \"1\", objective = \"reg:squarederror\", validate_parameters = \"TRUE\" ## xgb.attributes: ##   niter ## callbacks: ##   cb.evaluation.log() ## # of features: 1  ## niter: 15 ## nfeatures : 1  ## evaluation_log: ##     iter training_rmse ##        1      48.35573 ##        2      41.50986 ## ---                    ##       14      13.99279 ##       15      13.68966"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"the-power-of-parsnip-1","dir":"Articles","previous_headings":"","what":"The power of parsnip","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"","code":"preds2 <- predict(mod_pars2, new_data = fish_dat) pred_dat2 <- fish_dat %>%   bind_cols(preds2)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"the-power-of-parsnip-2","dir":"Articles","previous_headings":"","what":"The power of parsnip","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"","code":"p <- ggplot(pred_dat2, aes(x = MeanTemp_CoralWatch, y = .pred)) +   geom_line() + geom_point(aes(y = AbundanceAdult40)) +    scale_y_continuous(trans = \"log1p\") + theme_minimal() suppressMessages(print(p))"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"overfitting","dir":"Articles","previous_headings":"","what":"Overfitting","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"important concept Data Science Machine Learning idea overfitting. model appears ‘overfit’ data – predictions jump around wildly try fit individual data point. likely generalize well applied new dataset. reduce overfitting tuning ‘hyper-parameters’ algorithm make produce ‘smoother’ predictions. Smoothed prediction likely generalize better new datasets. accomplished using method called cross-validation, cover depth Week 7.","code":""},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"introducing-the-pine-rocklands-of-south-florida","dir":"Articles","previous_headings":"Forests of the Future or Forests of the Past?","what":"Introducing the Pine Rocklands of South Florida","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"Unique South Florida High species diversity Open canopy forests dominated Slash Pine Fire dependent ecosystem One critically endanger ecosystems world Pine Rocklands central range middle Miami! large patch remaining Everglades National Park  Image citation: Trotta, Lauren B., et al. “Community phylogeny globally critically imperiled pine rockland ecosystem.” American journal botany 105.10 (2018): 1735-1747.","code":"knitr::include_graphics(\"images/pine_rockland_map.jpg\")"},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"fius-pine-rockland","dir":"Articles","previous_headings":"","what":"FIU’s Pine Rockland","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"FIU Preserve campus one remaining patches Pine Rockland Miami-Dade 2016 FIU conducted prescribed burn help restore ecosystem local importance","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_5_lecture.html","id":"project-proposal","dir":"Articles","previous_headings":"","what":"Project Proposal","title":"Week 5 Lecture: Introduction to Species Distribution Modelling (SDM)","text":"propose one big group project Pine Rocklands weeks 11-16 start lecture – use data plants Pine Rockland examples next weeks. final project, can choose species Pine Rocklands (species) run SDM use make predictions. past future Pine Rockland species? follow steps good Data Science can work groups , decision end semester combine everyone’s SDMs prediction whole Pine Rockland community (least 18-30 species worth) start extracting data :  start using data example class next week. Next class working Week 5 Assignment (can start today). go abundance data presence / absence (e.g. occurrences) include data preprocessing model fitting one workflow using tidymodels little bit ecological niche theory understand SDMs represent important","code":"knitr::include_graphics(\"images/floristic.png\")"},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"species-distribution-modelling-2","dir":"Articles","previous_headings":"Forests of the Future Week 6","what":"Species Distribution Modelling 2","title":"Forests of the Future Week 6 Lecture","text":"Last week learned use tidymodels fit model data modelled abundance fish species different reefs based mean temperatures Today talk modelling occurrence data, data presence absence species particular sites also learn preprocess data using tidymodels, recipes package","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"ecological-niche-theory","dir":"Articles","previous_headings":"","what":"Ecological Niche Theory","title":"Forests of the Future Week 6 Lecture","text":"species ecological niche conditions necessary persistence species ecological role ecosystem niche : part ecological space (defined combinations biotic abiotic environmental conditions) species population can persist thus utilize resources impact environment","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"ecological-niche-theory-1","dir":"Articles","previous_headings":"","what":"Ecological Niche Theory","title":"Forests of the Future Week 6 Lecture","text":"Niches often visualized conceptualized hump-shaped distributions along environmental variable","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"ecological-niche-theory-2","dir":"Articles","previous_headings":"","what":"Ecological Niche Theory","title":"Forests of the Future Week 6 Lecture","text":"Compare model predictions made last lecture:","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"generalise-to-many-dimensions","dir":"Articles","previous_headings":"","what":"Generalise to many dimensions","title":"Forests of the Future Week 6 Lecture","text":"Environmental ‘hypervolume’ 3D Hypervolume","code":""},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"data-science-steps","dir":"Articles","previous_headings":"","what":"Data Science Steps","title":"Forests of the Future Week 6 Lecture","text":"Question Collect Data Munge / Clean Data Transform Data Model Analyze Data using Model Tune Model Validate / Test Model Interpret Model","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"this-week","dir":"Articles","previous_headings":"","what":"This week","title":"Forests of the Future Week 6 Lecture","text":"Question Collect Data Munge / Clean Data Transform Data Model Analyze Data using Model Tune Model Validate / Test Model Interpret Model Modelling fish abundance presence / absence data?","code":"data(\"RF_abund\") fish_dat <- RF_abund %>%   filter(SpeciesName == \"Thalassoma pavo\") %>%   mutate(Presence = as.factor(Presence))"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"presence-absence-data","dir":"Articles","previous_headings":"","what":"Presence / Absence Data","title":"Forests of the Future Week 6 Lecture","text":"really modelling numeric data anymore Presence Absence categories classification Model, classify present absent category Binary classification models typically output ‘probability’, number 0 1 Observed data compared output using ‘binomial’ probability distribution","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"presence-absence-data-1","dir":"Articles","previous_headings":"","what":"Presence / Absence Data","title":"Forests of the Future Week 6 Lecture","text":"R number probability distribution built-can use explore","code":"rbinom(100, 1, 0.5) ##   [1] 1 0 0 0 1 0 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 1 0 0 1 ##  [38] 1 0 1 0 0 0 1 1 1 1 1 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 0 0 1 1 0 1 ##  [75] 1 1 0 1 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 1 0 0 1 0 1 rbinom(100, 1, 0.75) ##   [1] 1 1 1 1 1 0 0 0 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 1 1 1 0 0 0 1 0 1 ##  [38] 0 1 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 ##  [75] 1 0 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 rbinom(100, 1, 0.25) ##   [1] 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 1 ##  [38] 1 0 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 ##  [75] 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 curve(dbinom(x, size = 100, 0.5), 0, 100)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"rf_abund-includes-presenceabsence-data-column","dir":"Articles","previous_headings":"","what":"RF_abund includes presence/absence data column","title":"Forests of the Future Week 6 Lecture","text":"","code":"fish_dat$Presence ##   [1] 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 ##  [38] 1 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 1 ##  [75] 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ## [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ## [149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ## [186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 ## [223] 0 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 ## [260] 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 ## [297] 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 0 0 0 0 0 ## [334] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 ## [371] 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 ## Levels: 0 1"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"lets-model-fish-occurrence","dir":"Articles","previous_headings":"","what":"Let’s model fish occurrence","title":"Forests of the Future Week 6 Lecture","text":"Use two variables: Mean Temperature Depth order make comparable ‘standardise’ also test model creating test set Split test set:","code":"set.seed(1234) data_split <- initial_split(fish_dat, 0.8, strata = Presence)  train_data <- training(data_split) test_data <- testing(data_split)  train_data ## # A tibble: 308 × 25 ##    SpeciesName   SiteC…¹ Abund…² Sampl…³ MeanT…⁴ MinTe…⁵ MaxTe…⁶ SDTem…⁷ ECOre…⁸ ##    <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <fct>   ##  1 Thalassoma p… AND2          0     164    17.6    14.1    22.8    2.85 Albora… ##  2 Thalassoma p… AND25         0     173    19.0    14.0    25.4    4.01 Albora… ##  3 Thalassoma p… AND37         0     173    19.1    14.0    26.1    4.20 Albora… ##  4 Thalassoma p… AND43         0     173    18.9    14.3    25.3    3.66 Albora… ##  5 Thalassoma p… AND50         0     164    18.2    14.2    23.5    3.02 Albora… ##  6 Thalassoma p… AND51         0     164    18.3    14.1    23.8    3.12 Albora… ##  7 Thalassoma p… AND54         0     173    18.6    14.2    24.6    3.41 Albora… ##  8 Thalassoma p… AND56         0     164    17.8    14.2    22.1    2.66 Albora… ##  9 Thalassoma p… AND60         0     164    18.4    14.9    22.2    2.53 Sahara… ## 10 Thalassoma p… AND63         0     173    18.9    14.4    26.3    3.85 Albora… ## # … with 298 more rows, 16 more variables: Presence <fct>, OLRE <fct>, ## #   MaxAbundance <dbl>, N_Obs <int>, Confidence_NObs <dbl>, T_Range_Obs <dbl>, ## #   Confidence_TRange_Obs <dbl>, N_Absences_T_Upper <int>, ## #   N_Absences_T_Lower <int>, Confidence_Occ_Tupper <dbl>, ## #   Confidence_Occ_Tlower <dbl>, T_Upper_Absences <dbl>, ## #   T_Lower_Absences <dbl>, T_Mean_Absences <dbl>, NEOLI <dbl>, ## #   Depth_Site <dbl>, and abbreviated variable names ¹​SiteCode, … test_data ## # A tibble: 77 × 25 ##    SpeciesName   SiteC…¹ Abund…² Sampl…³ MeanT…⁴ MinTe…⁵ MaxTe…⁶ SDTem…⁷ ECOre…⁸ ##    <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <fct>   ##  1 Thalassoma p… AND1          3     217    17.5    14.1    22.6    2.75 Albora… ##  2 Thalassoma p… AND12       100     173    18.5    14.0    24.7    3.67 Albora… ##  3 Thalassoma p… AND16         0     173    18.8    14.0    25.2    3.89 Albora… ##  4 Thalassoma p… AND18        13     173    18.9    14.0    25.2    3.92 Albora… ##  5 Thalassoma p… AND19         1     173    19.0    14.0    25.5    4.08 Albora… ##  6 Thalassoma p… AND21        11     173    18.8    14.0    25.2    3.87 Albora… ##  7 Thalassoma p… AND27        14     173    19.0    14.0    25.5    4.08 Albora… ##  8 Thalassoma p… AND29        17     173    19.0    14.0    25.4    4.03 Albora… ##  9 Thalassoma p… AND3          8     164    17.7    14.1    22.9    2.90 Albora… ## 10 Thalassoma p… AND4          0     164    17.9    14.1    23.3    3.01 Albora… ## # … with 67 more rows, 16 more variables: Presence <fct>, OLRE <fct>, ## #   MaxAbundance <dbl>, N_Obs <int>, Confidence_NObs <dbl>, T_Range_Obs <dbl>, ## #   Confidence_TRange_Obs <dbl>, N_Absences_T_Upper <int>, ## #   N_Absences_T_Lower <int>, Confidence_Occ_Tupper <dbl>, ## #   Confidence_Occ_Tlower <dbl>, T_Upper_Absences <dbl>, ## #   T_Lower_Absences <dbl>, T_Mean_Absences <dbl>, NEOLI <dbl>, ## #   Depth_Site <dbl>, and abbreviated variable names ¹​SiteCode, …"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"transform-data","dir":"Articles","previous_headings":"","what":"Transform data","title":"Forests of the Future Week 6 Lecture","text":"Make symmetric non-skewed (Yeo-Johnson transformation) Flexible transformation needs parameter, usually chosen based optimization training data Standardise (make mean zero, standard deviation 1) :  :","code":"s_dat <- train_data %>%   select(MeanTemp_CoralWatch, Depth_Site) %>%   pivot_longer(cols = everything(), values_to = \"Value\", names_to = \"Variable\") ggplot(s_dat, aes(Value)) +   geom_histogram(bins = 30) +   facet_wrap(vars(Variable), nrow = 2, scales = \"free\") +   theme_minimal() MeanTemp_yj <- car::powerTransform(train_data$MeanTemp_CoralWatch,                                    family = \"yjPower\") Depth_yj <- car::powerTransform(train_data$Depth_Site,                                 family = \"yjPower\") MeanTemp_yj ## Estimated transformation parameter  ## train_data$MeanTemp_CoralWatch  ##                     -0.8426166 Depth_yj ## Estimated transformation parameter  ## train_data$Depth_Site  ##             0.1361994 train_data <- train_data %>%   mutate(MeanTemp_tr = car::yjPower(MeanTemp_CoralWatch, MeanTemp_yj$roundlam),          Depth_tr = car::yjPower(Depth_Site, Depth_yj$roundlam)) s_dat <- train_data %>%   select(MeanTemp_tr, Depth_tr) %>%   pivot_longer(cols = everything(), values_to = \"Value\", names_to = \"Variable\") ggplot(s_dat, aes(Value)) +   geom_histogram(bins = 30) +   facet_wrap(vars(Variable), nrow = 2, scales = \"free\") +   theme_minimal()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"what-about-the-test-data","dir":"Articles","previous_headings":"","what":"What about the test data?","title":"Forests of the Future Week 6 Lecture","text":"use model predict occurrence test set, data must transformed exactly way training set means need keep lambda parameter fit training data apply parameter transform test data standardisation also requires parameters training data Keeping track transformations manually dangerous common mistake transform test data using parameters derived test data, makes test data incomparable training data","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"recipes-helps-to-solve-this-issue","dir":"Articles","previous_headings":"","what":"Recipes helps to solve this issue","title":"Forests of the Future Week 6 Lecture","text":"recipe set steps applied data modelling Everything kept track tidymodels steps applied correctly test data model fit Let’s make recipe","code":"RF_recipe <- recipe(train_data,                     Presence ~ MeanTemp_CoralWatch + Depth_Site) RF_recipe ## Recipe ##  ## Inputs: ##  ##       role #variables ##    outcome          1 ##  predictor          2"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"add-steps-to-the-recipe","dir":"Articles","previous_headings":"","what":"Add Steps to the recipe","title":"Forests of the Future Week 6 Lecture","text":"","code":"RF_recipe <- recipe(train_data,                     Presence ~ MeanTemp_CoralWatch + Depth_Site) %>%   step_YeoJohnson(MeanTemp_CoralWatch, Depth_Site) %>%   step_normalize(MeanTemp_CoralWatch, Depth_Site) RF_recipe ## Recipe ##  ## Inputs: ##  ##       role #variables ##    outcome          1 ##  predictor          2 ##  ## Operations: ##  ## Yeo-Johnson transformation on MeanTemp_CoralWatch, Depth_Site ## Centering and scaling for MeanTemp_CoralWatch, Depth_Site"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"prep-the-recipe","dir":"Articles","previous_headings":"","what":"Prep the recipe","title":"Forests of the Future Week 6 Lecture","text":"Prepping recipe estimates required parameters","code":"RF_recipe <- prep(RF_recipe) RF_recipe ## Recipe ##  ## Inputs: ##  ##       role #variables ##    outcome          1 ##  predictor          2 ##  ## Training data contained 308 data points and no missing data. ##  ## Operations: ##  ## Yeo-Johnson transformation on MeanTemp_CoralWatch, Depth_Site [trained] ## Centering and scaling for MeanTemp_CoralWatch, Depth_Site [trained]"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"bake-the-recipe","dir":"Articles","previous_headings":"","what":"Bake the recipe","title":"Forests of the Future Week 6 Lecture","text":"Baking applies steps dataset data now looks like:","code":"train_data_tr <- bake(RF_recipe, train_data) train_data_tr ## # A tibble: 308 × 3 ##    MeanTemp_CoralWatch Depth_Site Presence ##                  <dbl>      <dbl> <fct>    ##  1             -0.761     -1.37   0        ##  2             -0.125     -2.22   0        ##  3             -0.0707     0.555  0        ##  4             -0.150     -1.34   0        ##  5             -0.480     -1.73   0        ##  6             -0.448     -0.645  0        ##  7             -0.300     -0.946  0        ##  8             -0.672      0.144  0        ##  9             -0.369     -0.196  0        ## 10             -0.159     -0.0482 0        ## # … with 298 more rows s_dat <- train_data_tr %>% select(MeanTemp_CoralWatch, Depth_Site) %>% pivot_longer(cols = everything(), values_to = \"Value\", names_to = \"Variable\") ggplot(s_dat, aes(Value)) + geom_histogram(bins = 30) + facet_wrap(vars(Variable), nrow = 2, scales = \"free\") + theme_minimal()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"bake-the-test-data","dir":"Articles","previous_headings":"","what":"Bake the test data","title":"Forests of the Future Week 6 Lecture","text":"can now easily apply exact data manipulation test data","code":"test_data_tr <- bake(RF_recipe, test_data) test_data_tr ## # A tibble: 77 × 3 ##    MeanTemp_CoralWatch Depth_Site Presence ##                  <dbl>      <dbl> <fct>    ##  1             -0.828    -2.00    1        ##  2             -0.315     0.00543 1        ##  3             -0.177    -0.412   0        ##  4             -0.171     0.495   1        ##  5             -0.0972   -2.00    1        ##  6             -0.185    -0.667   1        ##  7             -0.0980   -1.93    1        ##  8             -0.119     0.178   1        ##  9             -0.710    -3.14    1        ## 10             -0.637    -2.64    0        ## # … with 67 more rows"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"combine-a-recipe-and-a-model","dir":"Articles","previous_headings":"","what":"Combine a recipe and a model","title":"Forests of the Future Week 6 Lecture","text":"","code":"RF_mod <-   boost_tree() %>%   set_engine('xgboost') %>%   set_mode('classification')  RF_mod ## Boosted Tree Model Specification (classification) ##  ## Computational engine: xgboost"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"a-workflow-is-a-recipe-and-a-model","dir":"Articles","previous_headings":"","what":"A workflow is a recipe and a model","title":"Forests of the Future Week 6 Lecture","text":"","code":"RF_wf <- workflow() %>%   add_recipe(RF_recipe) %>%   add_model(RF_mod)  RF_wf ## ══ Workflow ════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: boost_tree() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Boosted Tree Model Specification (classification) ##  ## Computational engine: xgboost"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"use-fit-to-run-a-workflow","dir":"Articles","previous_headings":"","what":"Use fit to run a workflow","title":"Forests of the Future Week 6 Lecture","text":"","code":"RF_fit <- RF_wf %>%   fit(train_data)  RF_fit ## ══ Workflow [trained] ══════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: boost_tree() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## ##### xgb.Booster ## raw: 25.1 Kb  ## call: ##   xgboost::xgb.train(params = list(eta = 0.3, max_depth = 6, gamma = 0,  ##     colsample_bytree = 1, colsample_bynode = 1, min_child_weight = 1,  ##     subsample = 1), data = x$data, nrounds = 15, watchlist = x$watchlist,  ##     verbose = 0, nthread = 1, objective = \"binary:logistic\") ## params (as set within xgb.train): ##   eta = \"0.3\", max_depth = \"6\", gamma = \"0\", colsample_bytree = \"1\", colsample_bynode = \"1\", min_child_weight = \"1\", subsample = \"1\", nthread = \"1\", objective = \"binary:logistic\", validate_parameters = \"TRUE\" ## xgb.attributes: ##   niter ## callbacks: ##   cb.evaluation.log() ## # of features: 2  ## niter: 15 ## nfeatures : 2  ## evaluation_log: ##     iter training_logloss ##        1        0.5244973 ##        2        0.4279284 ## ---                       ##       14        0.1878803 ##       15        0.1829834"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"make-predictions","dir":"Articles","previous_headings":"","what":"Make predictions","title":"Forests of the Future Week 6 Lecture","text":"Predict test data workflow knows apply recipe test data first","code":"predict(RF_fit, test_data) ## # A tibble: 77 × 1 ##    .pred_class ##    <fct>       ##  1 0           ##  2 1           ##  3 1           ##  4 1           ##  5 1           ##  6 1           ##  7 1           ##  8 1           ##  9 0           ## 10 0           ## # … with 67 more rows predict(RF_fit, test_data, type = \"prob\") ## # A tibble: 77 × 2 ##    .pred_0 .pred_1 ##      <dbl>   <dbl> ##  1  0.916   0.0842 ##  2  0.110   0.890  ##  3  0.118   0.882  ##  4  0.0654  0.935  ##  5  0.224   0.776  ##  6  0.0807  0.919  ##  7  0.224   0.776  ##  8  0.136   0.864  ##  9  0.879   0.121  ## 10  0.767   0.233  ## # … with 67 more rows"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"augment-data-with-predictions","dir":"Articles","previous_headings":"","what":"Augment data with predictions","title":"Forests of the Future Week 6 Lecture","text":"","code":"RF_test_preds <- augment(RF_fit, test_data)"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"at-last-we-test-the-fit-based-on-test-data","dir":"Articles","previous_headings":"","what":"At last we test the fit based on test data","title":"Forests of the Future Week 6 Lecture","text":"","code":"RF_test_preds %>%    roc_curve(.pred_0, truth = Presence) %>%    autoplot() RF_test_preds %>%    roc_auc(.pred_0, truth = Presence) ## # A tibble: 1 × 3 ##   .metric .estimator .estimate ##   <chr>   <chr>          <dbl> ## 1 roc_auc binary         0.911"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"plot-predictions-and-original-data","dir":"Articles","previous_headings":"","what":"Plot predictions and original data","title":"Forests of the Future Week 6 Lecture","text":"","code":"pred_dat <- cross_df(list(MeanTemp_CoralWatch = seq(min(fish_dat$MeanTemp_CoralWatch),                                                     max(fish_dat$MeanTemp_CoralWatch),                                                     length.out = 100),                             Depth_Site = seq(min(fish_dat$Depth_Site),                                              max(fish_dat$Depth_Site),                                              length.out = 100)))  newdat <- augment(RF_fit, pred_dat)  ggplot(newdat, aes(MeanTemp_CoralWatch, Depth_Site)) +   geom_contour_filled(aes(z = .pred_1)) +   geom_point(aes(size = Presence), data = fish_dat, alpha = 0.6) +   theme_minimal() ## Warning: Using size for a discrete variable is not advised."},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"pine-rocklands-plant-species","dir":"Articles","previous_headings":"","what":"Pine Rocklands Plant Species","title":"Forests of the Future Week 6 Lecture","text":"","code":"data(\"IRC\") IRC ## # A tibble: 476,255 × 7 ##    ScientificName         area_name            Occur…¹ Intro…² size   long   lat ##    <chr>                  <chr>                <chr>   <chr>   <chr> <dbl> <dbl> ##  1 Abelmoschus esculentus A.D. Doug Barnes Pa… Absent  Not in… 60.4… -80.3  25.7 ##  2 Abelmoschus esculentus Alice C. Wainwright… Absent  Not in… 21.5… -80.2  25.7 ##  3 Abelmoschus esculentus Allapattah Flats Wi… Absent  Not in… 2094… -80.5  27.2 ##  4 Abelmoschus esculentus Amberjack Slough     Absent  Not in… 182 … -82.3  26.9 ##  5 Abelmoschus esculentus Arch Creek Park      Absent  Not in… 10.3… -80.2  25.9 ##  6 Abelmoschus esculentus Arthur R. Marshall … Absent  Not in… 1484… -80.2  26.5 ##  7 Abelmoschus esculentus Bahia Honda State P… Absent  Not in… 491.… -81.3  24.7 ##  8 Abelmoschus esculentus Bartlett Estate      Absent  Not in… 35 a… -80.1  26.1 ##  9 Abelmoschus esculentus Beachwalk Pasley Pa… Absent  Not in… 17 a… -80.2  27.2 ## 10 Abelmoschus esculentus Big and Little Geor… Absent  Not in… 18.2… -80.4  25.6 ## # … with 476,245 more rows, and abbreviated variable names ¹​Occurrence, ## #   ²​Introduced"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Forests of the Future Week 6 Lecture","text":"","code":"n_distinct(IRC$area_name) ## [1] 205 n_distinct(IRC$ScientificName) ## [1] 2323"},{"path":"https://rdinnager.github.io/fofpack/articles/week_6_lecture.html","id":"species-summary","dir":"Articles","previous_headings":"","what":"Species Summary","title":"Forests of the Future Week 6 Lecture","text":"","code":"IRC_summ <- IRC %>%   filter(Occurrence == \"Present\") %>%   group_by(ScientificName) %>%   summarise(num_areas = n_distinct(area_name)) %>%   arrange(desc(num_areas)) %>%   mutate(spec_num = 1:n())  ggplot(IRC_summ, aes(spec_num, num_areas)) +   geom_col() +   theme_minimal()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"model-tuning","dir":"Articles","previous_headings":"","what":"Model Tuning","title":"Forests of the Future: Week 7 Lecture","text":"Going back reef fish example, saw major overfitting issues boosted tree model. class see tune hyper-parameters model improve performance.","code":"library(fofpack) library(tidyverse) library(tidymodels)  data(\"RF_abund\") fish_dat <- RF_abund %>%   filter(SpeciesName == \"Thalassoma pavo\") %>%   mutate(Presence = as.factor(Presence))"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"test-set","dir":"Articles","previous_headings":"","what":"Test Set","title":"Forests of the Future: Week 7 Lecture","text":"Split test set evaluate model end!","code":"set.seed(1234) data_split <- initial_split(fish_dat, 0.8, strata = Presence)  train_data <- training(data_split) test_data <- testing(data_split)  train_data ## # A tibble: 308 × 25 ##    SpeciesName   SiteC…¹ Abund…² Sampl…³ MeanT…⁴ MinTe…⁵ MaxTe…⁶ SDTem…⁷ ECOre…⁸ ##    <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <fct>   ##  1 Thalassoma p… AND2          0     164    17.6    14.1    22.8    2.85 Albora… ##  2 Thalassoma p… AND25         0     173    19.0    14.0    25.4    4.01 Albora… ##  3 Thalassoma p… AND37         0     173    19.1    14.0    26.1    4.20 Albora… ##  4 Thalassoma p… AND43         0     173    18.9    14.3    25.3    3.66 Albora… ##  5 Thalassoma p… AND50         0     164    18.2    14.2    23.5    3.02 Albora… ##  6 Thalassoma p… AND51         0     164    18.3    14.1    23.8    3.12 Albora… ##  7 Thalassoma p… AND54         0     173    18.6    14.2    24.6    3.41 Albora… ##  8 Thalassoma p… AND56         0     164    17.8    14.2    22.1    2.66 Albora… ##  9 Thalassoma p… AND60         0     164    18.4    14.9    22.2    2.53 Sahara… ## 10 Thalassoma p… AND63         0     173    18.9    14.4    26.3    3.85 Albora… ## # … with 298 more rows, 16 more variables: Presence <fct>, OLRE <fct>, ## #   MaxAbundance <dbl>, N_Obs <int>, Confidence_NObs <dbl>, T_Range_Obs <dbl>, ## #   Confidence_TRange_Obs <dbl>, N_Absences_T_Upper <int>, ## #   N_Absences_T_Lower <int>, Confidence_Occ_Tupper <dbl>, ## #   Confidence_Occ_Tlower <dbl>, T_Upper_Absences <dbl>, ## #   T_Lower_Absences <dbl>, T_Mean_Absences <dbl>, NEOLI <dbl>, ## #   Depth_Site <dbl>, and abbreviated variable names ¹​SiteCode, … test_data ## # A tibble: 77 × 25 ##    SpeciesName   SiteC…¹ Abund…² Sampl…³ MeanT…⁴ MinTe…⁵ MaxTe…⁶ SDTem…⁷ ECOre…⁸ ##    <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <fct>   ##  1 Thalassoma p… AND1          3     217    17.5    14.1    22.6    2.75 Albora… ##  2 Thalassoma p… AND12       100     173    18.5    14.0    24.7    3.67 Albora… ##  3 Thalassoma p… AND16         0     173    18.8    14.0    25.2    3.89 Albora… ##  4 Thalassoma p… AND18        13     173    18.9    14.0    25.2    3.92 Albora… ##  5 Thalassoma p… AND19         1     173    19.0    14.0    25.5    4.08 Albora… ##  6 Thalassoma p… AND21        11     173    18.8    14.0    25.2    3.87 Albora… ##  7 Thalassoma p… AND27        14     173    19.0    14.0    25.5    4.08 Albora… ##  8 Thalassoma p… AND29        17     173    19.0    14.0    25.4    4.03 Albora… ##  9 Thalassoma p… AND3          8     164    17.7    14.1    22.9    2.90 Albora… ## 10 Thalassoma p… AND4          0     164    17.9    14.1    23.3    3.01 Albora… ## # … with 67 more rows, 16 more variables: Presence <fct>, OLRE <fct>, ## #   MaxAbundance <dbl>, N_Obs <int>, Confidence_NObs <dbl>, T_Range_Obs <dbl>, ## #   Confidence_TRange_Obs <dbl>, N_Absences_T_Upper <int>, ## #   N_Absences_T_Lower <int>, Confidence_Occ_Tupper <dbl>, ## #   Confidence_Occ_Tlower <dbl>, T_Upper_Absences <dbl>, ## #   T_Lower_Absences <dbl>, T_Mean_Absences <dbl>, NEOLI <dbl>, ## #   Depth_Site <dbl>, and abbreviated variable names ¹​SiteCode, …"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"make-a-recipe","dir":"Articles","previous_headings":"","what":"Make a recipe","title":"Forests of the Future: Week 7 Lecture","text":"Transform data make less skewed centered zero.","code":"RF_recipe <- recipe(train_data,                     Presence ~ MeanTemp_CoralWatch + Depth_Site) %>%   step_YeoJohnson(MeanTemp_CoralWatch, Depth_Site) %>%   step_normalize(MeanTemp_CoralWatch, Depth_Site) RF_recipe ## Recipe ##  ## Inputs: ##  ##       role #variables ##    outcome          1 ##  predictor          2 ##  ## Operations: ##  ## Yeo-Johnson transformation on MeanTemp_CoralWatch, Depth_Site ## Centering and scaling for MeanTemp_CoralWatch, Depth_Site"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"make-a-model","dir":"Articles","previous_headings":"","what":"Make a model","title":"Forests of the Future: Week 7 Lecture","text":"Setup model object","code":"RF_mod <-   boost_tree() %>%   set_engine('xgboost') %>%   set_mode('classification')  RF_mod ## Boosted Tree Model Specification (classification) ##  ## Computational engine: xgboost"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"a-workflow-is-a-recipe-and-a-model","dir":"Articles","previous_headings":"","what":"A workflow is a recipe and a model","title":"Forests of the Future: Week 7 Lecture","text":"","code":"RF_wf <- workflow() %>%   add_recipe(RF_recipe) %>%   add_model(RF_mod)  RF_wf ## ══ Workflow ════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: boost_tree() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Boosted Tree Model Specification (classification) ##  ## Computational engine: xgboost"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"use-fit-to-run-a-workflow-then-visualize-predictions","dir":"Articles","previous_headings":"","what":"Use fit to run a workflow then visualize predictions","title":"Forests of the Future: Week 7 Lecture","text":"Run following code:","code":"RF_fit <- RF_wf %>%   fit(train_data)  RF_train_preds <- augment(RF_fit, train_data)  ggplot(RF_train_preds, aes(MeanTemp_CoralWatch, as.numeric(Presence) - 1)) +   geom_line(aes(y = .pred_1)) +   geom_point() +   theme_minimal()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"how-good-were-the-predictions-on-the-test-data","dir":"Articles","previous_headings":"","what":"How good were the predictions on the test data?","title":"Forests of the Future: Week 7 Lecture","text":"","code":"augment(RF_fit, test_data) %>%     roc_auc(.pred_0, truth = Presence) ## # A tibble: 1 × 3 ##   .metric .estimator .estimate ##   <chr>   <chr>          <dbl> ## 1 roc_auc binary         0.911"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"how-to-tune-the-model-to-improve-performance","dir":"Articles","previous_headings":"","what":"How to tune the model to improve performance","title":"Forests of the Future: Week 7 Lecture","text":"use tune() placemarker hyper-parameter","code":"RF_mod <-   boost_tree(trees = tune(), learn_rate = tune()) %>%   set_engine('xgboost') %>%   set_mode('classification')  RF_wf <- workflow() %>%   add_recipe(RF_recipe) %>%   add_model(RF_mod)  RF_wf ## ══ Workflow ════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: boost_tree() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Boosted Tree Model Specification (classification) ##  ## Main Arguments: ##   trees = tune() ##   learn_rate = tune() ##  ## Computational engine: xgboost"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"resamples-for-cross-validation","dir":"Articles","previous_headings":"","what":"Resamples for Cross Validation","title":"Forests of the Future: Week 7 Lecture","text":"","code":"fish_folds <- vfold_cv(train_data, v = 6, repeats = 2, strata = Presence) fish_folds ## #  6-fold cross-validation repeated 2 times using stratification  ## # A tibble: 12 × 3 ##    splits           id      id2   ##    <list>           <chr>   <chr> ##  1 <split [256/52]> Repeat1 Fold1 ##  2 <split [256/52]> Repeat1 Fold2 ##  3 <split [256/52]> Repeat1 Fold3 ##  4 <split [256/52]> Repeat1 Fold4 ##  5 <split [258/50]> Repeat1 Fold5 ##  6 <split [258/50]> Repeat1 Fold6 ##  7 <split [256/52]> Repeat2 Fold1 ##  8 <split [256/52]> Repeat2 Fold2 ##  9 <split [256/52]> Repeat2 Fold3 ## 10 <split [256/52]> Repeat2 Fold4 ## 11 <split [258/50]> Repeat2 Fold5 ## 12 <split [258/50]> Repeat2 Fold6"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"create-hyperparameter-grid","dir":"Articles","previous_headings":"","what":"Create Hyperparameter Grid","title":"Forests of the Future: Week 7 Lecture","text":"","code":"tree_grid <- grid_regular(trees(range = c(0, 5), trans = scales::log_trans()),                           learn_rate(),                           levels = 5) tree_grid ## # A tibble: 25 × 2 ##    trees   learn_rate ##    <int>        <dbl> ##  1     1 0.0000000001 ##  2     3 0.0000000001 ##  3    12 0.0000000001 ##  4    42 0.0000000001 ##  5   148 0.0000000001 ##  6     1 0.0000000178 ##  7     3 0.0000000178 ##  8    12 0.0000000178 ##  9    42 0.0000000178 ## 10   148 0.0000000178 ## # … with 15 more rows"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"run-the-model-on-a-grid-of-hyper-parameters","dir":"Articles","previous_headings":"","what":"Run the model on a grid of hyper-parameters","title":"Forests of the Future: Week 7 Lecture","text":"","code":"RF_res <- RF_wf %>%   tune_grid(fish_folds,             grid = tree_grid,             control = control_grid(save_pred = TRUE),             metrics = metric_set(roc_auc))  RF_res ## # Tuning results ## # 6-fold cross-validation repeated 2 times using stratification  ## # A tibble: 12 × 6 ##    splits           id      id2   .metrics          .notes           .predicti…¹ ##    <list>           <chr>   <chr> <list>            <list>           <list>      ##  1 <split [256/52]> Repeat1 Fold1 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  2 <split [256/52]> Repeat1 Fold2 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  3 <split [256/52]> Repeat1 Fold3 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  4 <split [256/52]> Repeat1 Fold4 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  5 <split [258/50]> Repeat1 Fold5 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  6 <split [258/50]> Repeat1 Fold6 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  7 <split [256/52]> Repeat2 Fold1 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  8 <split [256/52]> Repeat2 Fold2 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ##  9 <split [256/52]> Repeat2 Fold3 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ## 10 <split [256/52]> Repeat2 Fold4 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ## 11 <split [258/50]> Repeat2 Fold5 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ## 12 <split [258/50]> Repeat2 Fold6 <tibble [25 × 6]> <tibble [0 × 3]> <tibble>    ## # … with abbreviated variable name ¹​.predictions"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"best-models","dir":"Articles","previous_headings":"","what":"Best models?","title":"Forests of the Future: Week 7 Lecture","text":"can see best models using show_best() function. can plot results using collect_metrics() collect roc_auc values directly feed ggplot2 plot.","code":"RF_res %>%   show_best() ## # A tibble: 5 × 8 ##   trees learn_rate .metric .estimator  mean     n std_err .config               ##   <int>      <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                 ## 1    12 0.1        roc_auc binary     0.920    12 0.00956 Preprocessor1_Model23 ## 2    42 0.1        roc_auc binary     0.918    12 0.0104  Preprocessor1_Model24 ## 3     1 0.000562   roc_auc binary     0.915    12 0.00898 Preprocessor1_Model16 ## 4     1 0.1        roc_auc binary     0.915    12 0.00898 Preprocessor1_Model21 ## 5     1 0.00000316 roc_auc binary     0.915    12 0.00895 Preprocessor1_Model11 RF_res %>%   collect_metrics() %>%   mutate(learn_rate = factor(learn_rate)) %>%   ggplot(aes(trees, mean, color = learn_rate)) +   geom_line(size = 1.5, alpha = 0.6) +   geom_point(size = 2) +   scale_color_viridis_d(begin = .95, end = 0) +   scale_x_log10() +   theme_minimal()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"final-fit","dir":"Articles","previous_headings":"","what":"Final Fit","title":"Forests of the Future: Week 7 Lecture","text":"","code":"best_tree <- RF_res %>%   select_best(\"roc_auc\")  final_wf <- RF_wf %>%    finalize_workflow(best_tree)  final_wf ## ══ Workflow ════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: boost_tree() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 2 Recipe Steps ##  ## • step_YeoJohnson() ## • step_normalize() ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Boosted Tree Model Specification (classification) ##  ## Main Arguments: ##   trees = 12 ##   learn_rate = 0.1 ##  ## Computational engine: xgboost final_fit <-    final_wf %>%   last_fit(data_split)  final_fit ## # Resampling results ## # Manual resampling  ## # A tibble: 1 × 6 ##   splits           id               .metrics .notes   .predictions .workflow  ##   <list>           <chr>            <list>   <list>   <list>       <list>     ## 1 <split [308/77]> train/test split <tibble> <tibble> <tibble>     <workflow> final_fit %>%   collect_metrics() ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.818 Preprocessor1_Model1 ## 2 roc_auc  binary         0.917 Preprocessor1_Model1 RF_final_preds <- augment(final_fit$.workflow[[1]],                           fish_dat)  ggplot(RF_final_preds, aes(MeanTemp_CoralWatch, as.numeric(Presence) - 1)) +   geom_line(aes(y = .pred_1)) +   geom_point() +   ylab(\"Probability of Presence\") +   theme_minimal()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"plot-final-predictions-on-all-data","dir":"Articles","previous_headings":"","what":"Plot Final Predictions on All Data","title":"Forests of the Future: Week 7 Lecture","text":"","code":"RF_final_preds <- augment(final_fit$.workflow[[1]],                           fish_dat)  ggplot(RF_final_preds, aes(MeanTemp_CoralWatch, as.numeric(Presence) - 1)) +   geom_line(aes(y = .pred_1)) +   geom_point() +   ylab(\"Probability of Presence\") +   theme_minimal()"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"endangered-pine-rocklands","dir":"Articles","previous_headings":"","what":"Endangered Pine Rocklands","title":"Forests of the Future: Week 7 Lecture","text":"Pine Rocklands, ‘ecosystem’ defined unique assemblage species Can predict plant communities Pine Rocklands species assemblage?","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"flip-the-script","dir":"Articles","previous_headings":"","what":"Flip the Script","title":"Forests of the Future: Week 7 Lecture","text":"model distribution Pine Rockland throughout South Florida parks Response Pine Rockland, Yes ? Predictors : plant species Pine Rocklands ‘species’ modelled, presence absence different plants ‘environmental variables’ assignment week attempt model bu using different models / parameters","code":""},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"lets-go-through-the-model-together","dir":"Articles","previous_headings":"","what":"Let’s Go Through the Model Together","title":"Forests of the Future: Week 7 Lecture","text":"Parks Pine Rockland: Turn presence / absence column Now predictors. Introducing pivot_wider() tidyr Merge data.","code":"data(\"IRC\") data(\"parks_LC\")  parks_LC ## # A tibble: 2,279 × 6 ## # Groups:   area_name [191] ##    area_name                NAME_STATE              area    prop  long   lat ##    <chr>                    <chr>                  <dbl>   <dbl> <dbl> <dbl> ##  1 A.D. Doug Barnes Park    Cultural - Lacustrine 10883. 0.0452  -80.3  25.7 ##  2 A.D. Doug Barnes Park    Cultural - Riverine     427. 0.00177 -80.3  25.7 ##  3 A.D. Doug Barnes Park    High Intensity Urban  13304. 0.0552  -80.3  25.7 ##  4 A.D. Doug Barnes Park    Low Intensity Urban   98732. 0.410   -80.3  25.7 ##  5 A.D. Doug Barnes Park    Pine Rockland         27187. 0.113   -80.3  25.7 ##  6 A.D. Doug Barnes Park    Rockland Hammock      11383. 0.0472  -80.3  25.7 ##  7 A.D. Doug Barnes Park    Transportation        79099. 0.328   -80.3  25.7 ##  8 Alice C. Wainwright Park Estuarine              2605. 0.0342  -80.2  25.7 ##  9 Alice C. Wainwright Park Low Intensity Urban   11727. 0.154   -80.2  25.7 ## 10 Alice C. Wainwright Park Mesic Hammock         12842. 0.169   -80.2  25.7 ## # … with 2,269 more rows PR_parks <- parks_LC %>%   filter(NAME_STATE == \"Pine Rockland\",          prop > 0.05)  PR_parks ## # A tibble: 36 × 6 ## # Groups:   area_name [36] ##    area_name                NAME_STATE       area   prop  long   lat ##    <chr>                    <chr>           <dbl>  <dbl> <dbl> <dbl> ##  1 A.D. Doug Barnes Park    Pine Rockland  27187. 0.113  -80.3  25.7 ##  2 Bill Sadowski Park       Pine Rockland  25214. 0.240  -80.3  25.6 ##  3 Black Creek Forest       Pine Rockland  13477. 0.472  -80.4  25.6 ##  4 Boystown Pineland        Pine Rockland 266155. 0.857  -80.4  25.7 ##  5 Camp Owaissa Bauer       Pine Rockland 191352. 0.510  -80.5  25.5 ##  6 Coral Reef Park          Pine Rockland  16226. 0.0873 -80.3  25.6 ##  7 Deering Estate at Cutler Pine Rockland 316857. 0.222  -80.3  25.6 ##  8 Eachus Pineland          Pine Rockland  57121. 0.817  -80.4  25.6 ##  9 Florida City Pineland    Pine Rockland  77510. 0.783  -80.5  25.4 ## 10 George N. Avery Pineland Pine Rockland   6298. 0.655  -80.4  25.5 ## # … with 26 more rows nrow(PR_parks) / n_distinct(parks_LC$area_name) ## [1] 0.1884817 PR_parks <- parks_LC %>%   select(area_name) %>%   distinct() %>%   left_join(PR_parks %>%               mutate(Pine_Rockland = \"Present\") %>%               select(area_name, Pine_Rockland)) %>%   mutate(Pine_Rockland = ifelse(is.na(Pine_Rockland), \"Absent\", Pine_Rockland) %>%            as.factor()) ## Joining, by = \"area_name\" PR_parks ## # A tibble: 191 × 2 ## # Groups:   area_name [191] ##    area_name                                               Pine_Rockland ##    <chr>                                                   <fct>         ##  1 A.D. Doug Barnes Park                                   Present       ##  2 Alice C. Wainwright Park                                Absent        ##  3 Allapattah Flats Wildlife Management Area               Absent        ##  4 Amberjack Slough                                        Absent        ##  5 Arch Creek Park                                         Absent        ##  6 Arthur R. Marshall Loxahatchee National Wildlife Refuge Absent        ##  7 Bahia Honda State Park                                  Absent        ##  8 Bartlett Estate                                         Absent        ##  9 Beachwalk Pasley Park                                   Absent        ## 10 Big and Little George Hammocks                          Absent        ## # … with 181 more rows spec_preds <- IRC %>%   mutate(Occurrence = ifelse(Occurrence == \"Present\", 1, 0)) %>%   select(area_name, ScientificName, Occurrence) %>%   distinct(area_name, ScientificName, .keep_all = TRUE) %>%   pivot_wider(names_from = ScientificName,               values_from = Occurrence)  spec_preds ## # A tibble: 205 × 2,324 ##    area_name     Abelm…¹ Abild…² Abrus…³ Abuti…⁴ Abuti…⁵ Acaci…⁶ Acaci…⁷ Acaly…⁸ ##    <chr>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> ##  1 A.D. Doug Ba…       0       0       1       0       0       0       0       0 ##  2 Alice C. Wai…       0       0       1       0       0       1       0       0 ##  3 Allapattah F…       0       0       0       0       0       0       0       0 ##  4 Amberjack Sl…       0       0       0       0       0       0       0       0 ##  5 Arch Creek P…       0       0       1       0       0       0       0       0 ##  6 Arthur R. Ma…       0       0       1       0       0       1       0       0 ##  7 Bahia Honda …       0       1       0       0       0       0       0       0 ##  8 Bartlett Est…       0       0       0       0       0       0       0       0 ##  9 Beachwalk Pa…       0       0       0       0       0       0       0       0 ## 10 Big and Litt…       0       1       1       0       0       0       0       1 ## # … with 195 more rows, 2,315 more variables: ## #   `Acalypha amentacea subsp. wilkesiana` <dbl>, `Acalypha arvensis` <dbl>, ## #   `Acalypha chamaedrifolia` <dbl>, `Acalypha gracilens` <dbl>, ## #   `Acalypha hispida` <dbl>, `Acalypha ostryifolia` <dbl>, ## #   `Acanthocereus tetragonus` <dbl>, `Acanthospermum hispidum` <dbl>, ## #   `Acer rubrum` <dbl>, `Achyranthes aspera var. aspera` <dbl>, ## #   `Achyranthes aspera var. pubescens` <dbl>, `Acisanthera quadrata` <dbl>, … PR_parks <- PR_parks %>%   left_join(spec_preds) ## Joining, by = \"area_name\" PR_parks ## # A tibble: 191 × 2,325 ## # Groups:   area_name [191] ##    area_name     Pine_…¹ Abelm…² Abild…³ Abrus…⁴ Abuti…⁵ Abuti…⁶ Acaci…⁷ Acaci…⁸ ##    <chr>         <fct>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> ##  1 A.D. Doug Ba… Present       0       0       1       0       0       0       0 ##  2 Alice C. Wai… Absent        0       0       1       0       0       1       0 ##  3 Allapattah F… Absent        0       0       0       0       0       0       0 ##  4 Amberjack Sl… Absent        0       0       0       0       0       0       0 ##  5 Arch Creek P… Absent        0       0       1       0       0       0       0 ##  6 Arthur R. Ma… Absent        0       0       1       0       0       1       0 ##  7 Bahia Honda … Absent        0       1       0       0       0       0       0 ##  8 Bartlett Est… Absent        0       0       0       0       0       0       0 ##  9 Beachwalk Pa… Absent        0       0       0       0       0       0       0 ## 10 Big and Litt… Absent        0       1       1       0       0       0       0 ## # … with 181 more rows, 2,316 more variables: `Acalypha alopecuroidea` <dbl>, ## #   `Acalypha amentacea subsp. wilkesiana` <dbl>, `Acalypha arvensis` <dbl>, ## #   `Acalypha chamaedrifolia` <dbl>, `Acalypha gracilens` <dbl>, ## #   `Acalypha hispida` <dbl>, `Acalypha ostryifolia` <dbl>, ## #   `Acanthocereus tetragonus` <dbl>, `Acanthospermum hispidum` <dbl>, ## #   `Acer rubrum` <dbl>, `Achyranthes aspera var. aspera` <dbl>, ## #   `Achyranthes aspera var. pubescens` <dbl>, `Acisanthera quadrata` <dbl>, …"},{"path":"https://rdinnager.github.io/fofpack/articles/week_7_lecture.html","id":"try-a-model-step-by-step","dir":"Articles","previous_headings":"","what":"Try a Model, Step by Step","title":"Forests of the Future: Week 7 Lecture","text":"Split data: Setup recipe (simple time): Setup model: Setup resamples: Fit workflow tuning grid: Find best model: final fit: Importance scores:","code":"set.seed(1234) PR_split <- initial_split(PR_parks, 0.8, strata = Pine_Rockland)  PR_train <- training(PR_split) PR_test <- testing(PR_split) PR_recipe <- recipe(Pine_Rockland ~ ., data = PR_train) %>%   update_role(area_name, new_role = \"id variable\") PR_mod <-   rand_forest(trees = tune(), mtry = tune()) %>%   set_engine('ranger') %>%   set_mode('classification')  PR_wf <- workflow() %>%   add_recipe(PR_recipe) %>%   add_model(PR_mod)  PR_wf ## ══ Workflow ════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: rand_forest() ##  ## ── Preprocessor ──────────────────────────────────────────────────────────────── ## 0 Recipe Steps ##  ## ── Model ─────────────────────────────────────────────────────────────────────── ## Random Forest Model Specification (classification) ##  ## Main Arguments: ##   mtry = tune() ##   trees = tune() ##  ## Computational engine: ranger PR_folds <- vfold_cv(PR_train, v = 6, strata = Pine_Rockland) PR_folds ## #  6-fold cross-validation using stratification  ## # A tibble: 6 × 2 ##   splits           id    ##   <list>           <chr> ## 1 <split [126/26]> Fold1 ## 2 <split [126/26]> Fold2 ## 3 <split [126/26]> Fold3 ## 4 <split [126/26]> Fold4 ## 5 <split [128/24]> Fold5 ## 6 <split [128/24]> Fold6 PR_tune <- PR_wf %>%   tune_grid(PR_folds,             grid = 25,             metrics = metric_set(roc_auc),             control = control_grid(verbose = TRUE)) ## i Creating pre-processing data to finalize unknown parameter: mtry ## i Fold1: preprocessor 1/1 ## ✓ Fold1: preprocessor 1/1 ## i Fold1: preprocessor 1/1, model 1/25 ## ✓ Fold1: preprocessor 1/1, model 1/25 ## i Fold1: preprocessor 1/1, model 1/25 (predictions) ## i Fold1: preprocessor 1/1, model 2/25 ## ✓ Fold1: preprocessor 1/1, model 2/25 ## i Fold1: preprocessor 1/1, model 2/25 (predictions) ## i Fold1: preprocessor 1/1, model 3/25 ## ✓ Fold1: preprocessor 1/1, model 3/25 ## i Fold1: preprocessor 1/1, model 3/25 (predictions) ## i Fold1: preprocessor 1/1, model 4/25 ## ✓ Fold1: preprocessor 1/1, model 4/25 ## i Fold1: preprocessor 1/1, model 4/25 (predictions) ## i Fold1: preprocessor 1/1, model 5/25 ## ✓ Fold1: preprocessor 1/1, model 5/25 ## i Fold1: preprocessor 1/1, model 5/25 (predictions) ## i Fold1: preprocessor 1/1, model 6/25 ## ✓ Fold1: preprocessor 1/1, model 6/25 ## i Fold1: preprocessor 1/1, model 6/25 (predictions) ## i Fold1: preprocessor 1/1, model 7/25 ## ✓ Fold1: preprocessor 1/1, model 7/25 ## i Fold1: preprocessor 1/1, model 7/25 (predictions) ## i Fold1: preprocessor 1/1, model 8/25 ## ✓ Fold1: preprocessor 1/1, model 8/25 ## i Fold1: preprocessor 1/1, model 8/25 (predictions) ## i Fold1: preprocessor 1/1, model 9/25 ## ✓ Fold1: preprocessor 1/1, model 9/25 ## i Fold1: preprocessor 1/1, model 9/25 (predictions) ## i Fold1: preprocessor 1/1, model 10/25 ## ✓ Fold1: preprocessor 1/1, model 10/25 ## i Fold1: preprocessor 1/1, model 10/25 (predictions) ## i Fold1: preprocessor 1/1, model 11/25 ## ✓ Fold1: preprocessor 1/1, model 11/25 ## i Fold1: preprocessor 1/1, model 11/25 (predictions) ## i Fold1: preprocessor 1/1, model 12/25 ## ✓ Fold1: preprocessor 1/1, model 12/25 ## i Fold1: preprocessor 1/1, model 12/25 (predictions) ## i Fold1: preprocessor 1/1, model 13/25 ## ✓ Fold1: preprocessor 1/1, model 13/25 ## i Fold1: preprocessor 1/1, model 13/25 (predictions) ## i Fold1: preprocessor 1/1, model 14/25 ## ✓ Fold1: preprocessor 1/1, model 14/25 ## i Fold1: preprocessor 1/1, model 14/25 (predictions) ## i Fold1: preprocessor 1/1, model 15/25 ## ✓ Fold1: preprocessor 1/1, model 15/25 ## i Fold1: preprocessor 1/1, model 15/25 (predictions) ## i Fold1: preprocessor 1/1, model 16/25 ## ✓ Fold1: preprocessor 1/1, model 16/25 ## i Fold1: preprocessor 1/1, model 16/25 (predictions) ## i Fold1: preprocessor 1/1, model 17/25 ## ✓ Fold1: preprocessor 1/1, model 17/25 ## i Fold1: preprocessor 1/1, model 17/25 (predictions) ## i Fold1: preprocessor 1/1, model 18/25 ## ✓ Fold1: preprocessor 1/1, model 18/25 ## i Fold1: preprocessor 1/1, model 18/25 (predictions) ## i Fold1: preprocessor 1/1, model 19/25 ## ✓ Fold1: preprocessor 1/1, model 19/25 ## i Fold1: preprocessor 1/1, model 19/25 (predictions) ## i Fold1: preprocessor 1/1, model 20/25 ## ✓ Fold1: preprocessor 1/1, model 20/25 ## i Fold1: preprocessor 1/1, model 20/25 (predictions) ## i Fold1: preprocessor 1/1, model 21/25 ## ✓ Fold1: preprocessor 1/1, model 21/25 ## i Fold1: preprocessor 1/1, model 21/25 (predictions) ## i Fold1: preprocessor 1/1, model 22/25 ## ✓ Fold1: preprocessor 1/1, model 22/25 ## i Fold1: preprocessor 1/1, model 22/25 (predictions) ## i Fold1: preprocessor 1/1, model 23/25 ## ✓ Fold1: preprocessor 1/1, model 23/25 ## i Fold1: preprocessor 1/1, model 23/25 (predictions) ## i Fold1: preprocessor 1/1, model 24/25 ## ✓ Fold1: preprocessor 1/1, model 24/25 ## i Fold1: preprocessor 1/1, model 24/25 (predictions) ## i Fold1: preprocessor 1/1, model 25/25 ## ✓ Fold1: preprocessor 1/1, model 25/25 ## i Fold1: preprocessor 1/1, model 25/25 (predictions) ## i Fold2: preprocessor 1/1 ## ✓ Fold2: preprocessor 1/1 ## i Fold2: preprocessor 1/1, model 1/25 ## ✓ Fold2: preprocessor 1/1, model 1/25 ## i Fold2: preprocessor 1/1, model 1/25 (predictions) ## i Fold2: preprocessor 1/1, model 2/25 ## ✓ Fold2: preprocessor 1/1, model 2/25 ## i Fold2: preprocessor 1/1, model 2/25 (predictions) ## i Fold2: preprocessor 1/1, model 3/25 ## ✓ Fold2: preprocessor 1/1, model 3/25 ## i Fold2: preprocessor 1/1, model 3/25 (predictions) ## i Fold2: preprocessor 1/1, model 4/25 ## ✓ Fold2: preprocessor 1/1, model 4/25 ## i Fold2: preprocessor 1/1, model 4/25 (predictions) ## i Fold2: preprocessor 1/1, model 5/25 ## ✓ Fold2: preprocessor 1/1, model 5/25 ## i Fold2: preprocessor 1/1, model 5/25 (predictions) ## i Fold2: preprocessor 1/1, model 6/25 ## ✓ Fold2: preprocessor 1/1, model 6/25 ## i Fold2: preprocessor 1/1, model 6/25 (predictions) ## i Fold2: preprocessor 1/1, model 7/25 ## ✓ Fold2: preprocessor 1/1, model 7/25 ## i Fold2: preprocessor 1/1, model 7/25 (predictions) ## i Fold2: preprocessor 1/1, model 8/25 ## ✓ Fold2: preprocessor 1/1, model 8/25 ## i Fold2: preprocessor 1/1, model 8/25 (predictions) ## i Fold2: preprocessor 1/1, model 9/25 ## ✓ Fold2: preprocessor 1/1, model 9/25 ## i Fold2: preprocessor 1/1, model 9/25 (predictions) ## i Fold2: preprocessor 1/1, model 10/25 ## ✓ Fold2: preprocessor 1/1, model 10/25 ## i Fold2: preprocessor 1/1, model 10/25 (predictions) ## i Fold2: preprocessor 1/1, model 11/25 ## ✓ Fold2: preprocessor 1/1, model 11/25 ## i Fold2: preprocessor 1/1, model 11/25 (predictions) ## i Fold2: preprocessor 1/1, model 12/25 ## ✓ Fold2: preprocessor 1/1, model 12/25 ## i Fold2: preprocessor 1/1, model 12/25 (predictions) ## i Fold2: preprocessor 1/1, model 13/25 ## ✓ Fold2: preprocessor 1/1, model 13/25 ## i Fold2: preprocessor 1/1, model 13/25 (predictions) ## i Fold2: preprocessor 1/1, model 14/25 ## ✓ Fold2: preprocessor 1/1, model 14/25 ## i Fold2: preprocessor 1/1, model 14/25 (predictions) ## i Fold2: preprocessor 1/1, model 15/25 ## ✓ Fold2: preprocessor 1/1, model 15/25 ## i Fold2: preprocessor 1/1, model 15/25 (predictions) ## i Fold2: preprocessor 1/1, model 16/25 ## ✓ Fold2: preprocessor 1/1, model 16/25 ## i Fold2: preprocessor 1/1, model 16/25 (predictions) ## i Fold2: preprocessor 1/1, model 17/25 ## ✓ Fold2: preprocessor 1/1, model 17/25 ## i Fold2: preprocessor 1/1, model 17/25 (predictions) ## i Fold2: preprocessor 1/1, model 18/25 ## ✓ Fold2: preprocessor 1/1, model 18/25 ## i Fold2: preprocessor 1/1, model 18/25 (predictions) ## i Fold2: preprocessor 1/1, model 19/25 ## ✓ Fold2: preprocessor 1/1, model 19/25 ## i Fold2: preprocessor 1/1, model 19/25 (predictions) ## i Fold2: preprocessor 1/1, model 20/25 ## ✓ Fold2: preprocessor 1/1, model 20/25 ## i Fold2: preprocessor 1/1, model 20/25 (predictions) ## i Fold2: preprocessor 1/1, model 21/25 ## ✓ Fold2: preprocessor 1/1, model 21/25 ## i Fold2: preprocessor 1/1, model 21/25 (predictions) ## i Fold2: preprocessor 1/1, model 22/25 ## ✓ Fold2: preprocessor 1/1, model 22/25 ## i Fold2: preprocessor 1/1, model 22/25 (predictions) ## i Fold2: preprocessor 1/1, model 23/25 ## ✓ Fold2: preprocessor 1/1, model 23/25 ## i Fold2: preprocessor 1/1, model 23/25 (predictions) ## i Fold2: preprocessor 1/1, model 24/25 ## ✓ Fold2: preprocessor 1/1, model 24/25 ## i Fold2: preprocessor 1/1, model 24/25 (predictions) ## i Fold2: preprocessor 1/1, model 25/25 ## ✓ Fold2: preprocessor 1/1, model 25/25 ## i Fold2: preprocessor 1/1, model 25/25 (predictions) ## i Fold3: preprocessor 1/1 ## ✓ Fold3: preprocessor 1/1 ## i Fold3: preprocessor 1/1, model 1/25 ## ✓ Fold3: preprocessor 1/1, model 1/25 ## i Fold3: preprocessor 1/1, model 1/25 (predictions) ## i Fold3: preprocessor 1/1, model 2/25 ## ✓ Fold3: preprocessor 1/1, model 2/25 ## i Fold3: preprocessor 1/1, model 2/25 (predictions) ## i Fold3: preprocessor 1/1, model 3/25 ## ✓ Fold3: preprocessor 1/1, model 3/25 ## i Fold3: preprocessor 1/1, model 3/25 (predictions) ## i Fold3: preprocessor 1/1, model 4/25 ## ✓ Fold3: preprocessor 1/1, model 4/25 ## i Fold3: preprocessor 1/1, model 4/25 (predictions) ## i Fold3: preprocessor 1/1, model 5/25 ## ✓ Fold3: preprocessor 1/1, model 5/25 ## i Fold3: preprocessor 1/1, model 5/25 (predictions) ## i Fold3: preprocessor 1/1, model 6/25 ## ✓ Fold3: preprocessor 1/1, model 6/25 ## i Fold3: preprocessor 1/1, model 6/25 (predictions) ## i Fold3: preprocessor 1/1, model 7/25 ## ✓ Fold3: preprocessor 1/1, model 7/25 ## i Fold3: preprocessor 1/1, model 7/25 (predictions) ## i Fold3: preprocessor 1/1, model 8/25 ## ✓ Fold3: preprocessor 1/1, model 8/25 ## i Fold3: preprocessor 1/1, model 8/25 (predictions) ## i Fold3: preprocessor 1/1, model 9/25 ## ✓ Fold3: preprocessor 1/1, model 9/25 ## i Fold3: preprocessor 1/1, model 9/25 (predictions) ## i Fold3: preprocessor 1/1, model 10/25 ## ✓ Fold3: preprocessor 1/1, model 10/25 ## i Fold3: preprocessor 1/1, model 10/25 (predictions) ## i Fold3: preprocessor 1/1, model 11/25 ## ✓ Fold3: preprocessor 1/1, model 11/25 ## i Fold3: preprocessor 1/1, model 11/25 (predictions) ## i Fold3: preprocessor 1/1, model 12/25 ## ✓ Fold3: preprocessor 1/1, model 12/25 ## i Fold3: preprocessor 1/1, model 12/25 (predictions) ## i Fold3: preprocessor 1/1, model 13/25 ## ✓ Fold3: preprocessor 1/1, model 13/25 ## i Fold3: preprocessor 1/1, model 13/25 (predictions) ## i Fold3: preprocessor 1/1, model 14/25 ## ✓ Fold3: preprocessor 1/1, model 14/25 ## i Fold3: preprocessor 1/1, model 14/25 (predictions) ## i Fold3: preprocessor 1/1, model 15/25 ## ✓ Fold3: preprocessor 1/1, model 15/25 ## i Fold3: preprocessor 1/1, model 15/25 (predictions) ## i Fold3: preprocessor 1/1, model 16/25 ## ✓ Fold3: preprocessor 1/1, model 16/25 ## i Fold3: preprocessor 1/1, model 16/25 (predictions) ## i Fold3: preprocessor 1/1, model 17/25 ## ✓ Fold3: preprocessor 1/1, model 17/25 ## i Fold3: preprocessor 1/1, model 17/25 (predictions) ## i Fold3: preprocessor 1/1, model 18/25 ## ✓ Fold3: preprocessor 1/1, model 18/25 ## i Fold3: preprocessor 1/1, model 18/25 (predictions) ## i Fold3: preprocessor 1/1, model 19/25 ## ✓ Fold3: preprocessor 1/1, model 19/25 ## i Fold3: preprocessor 1/1, model 19/25 (predictions) ## i Fold3: preprocessor 1/1, model 20/25 ## ✓ Fold3: preprocessor 1/1, model 20/25 ## i Fold3: preprocessor 1/1, model 20/25 (predictions) ## i Fold3: preprocessor 1/1, model 21/25 ## ✓ Fold3: preprocessor 1/1, model 21/25 ## i Fold3: preprocessor 1/1, model 21/25 (predictions) ## i Fold3: preprocessor 1/1, model 22/25 ## ✓ Fold3: preprocessor 1/1, model 22/25 ## i Fold3: preprocessor 1/1, model 22/25 (predictions) ## i Fold3: preprocessor 1/1, model 23/25 ## ✓ Fold3: preprocessor 1/1, model 23/25 ## i Fold3: preprocessor 1/1, model 23/25 (predictions) ## i Fold3: preprocessor 1/1, model 24/25 ## ✓ Fold3: preprocessor 1/1, model 24/25 ## i Fold3: preprocessor 1/1, model 24/25 (predictions) ## i Fold3: preprocessor 1/1, model 25/25 ## ✓ Fold3: preprocessor 1/1, model 25/25 ## i Fold3: preprocessor 1/1, model 25/25 (predictions) ## i Fold4: preprocessor 1/1 ## ✓ Fold4: preprocessor 1/1 ## i Fold4: preprocessor 1/1, model 1/25 ## ✓ Fold4: preprocessor 1/1, model 1/25 ## i Fold4: preprocessor 1/1, model 1/25 (predictions) ## i Fold4: preprocessor 1/1, model 2/25 ## ✓ Fold4: preprocessor 1/1, model 2/25 ## i Fold4: preprocessor 1/1, model 2/25 (predictions) ## i Fold4: preprocessor 1/1, model 3/25 ## ✓ Fold4: preprocessor 1/1, model 3/25 ## i Fold4: preprocessor 1/1, model 3/25 (predictions) ## i Fold4: preprocessor 1/1, model 4/25 ## ✓ Fold4: preprocessor 1/1, model 4/25 ## i Fold4: preprocessor 1/1, model 4/25 (predictions) ## i Fold4: preprocessor 1/1, model 5/25 ## ✓ Fold4: preprocessor 1/1, model 5/25 ## i Fold4: preprocessor 1/1, model 5/25 (predictions) ## i Fold4: preprocessor 1/1, model 6/25 ## ✓ Fold4: preprocessor 1/1, model 6/25 ## i Fold4: preprocessor 1/1, model 6/25 (predictions) ## i Fold4: preprocessor 1/1, model 7/25 ## ✓ Fold4: preprocessor 1/1, model 7/25 ## i Fold4: preprocessor 1/1, model 7/25 (predictions) ## i Fold4: preprocessor 1/1, model 8/25 ## ✓ Fold4: preprocessor 1/1, model 8/25 ## i Fold4: preprocessor 1/1, model 8/25 (predictions) ## i Fold4: preprocessor 1/1, model 9/25 ## ✓ Fold4: preprocessor 1/1, model 9/25 ## i Fold4: preprocessor 1/1, model 9/25 (predictions) ## i Fold4: preprocessor 1/1, model 10/25 ## ✓ Fold4: preprocessor 1/1, model 10/25 ## i Fold4: preprocessor 1/1, model 10/25 (predictions) ## i Fold4: preprocessor 1/1, model 11/25 ## ✓ Fold4: preprocessor 1/1, model 11/25 ## i Fold4: preprocessor 1/1, model 11/25 (predictions) ## i Fold4: preprocessor 1/1, model 12/25 ## ✓ Fold4: preprocessor 1/1, model 12/25 ## i Fold4: preprocessor 1/1, model 12/25 (predictions) ## i Fold4: preprocessor 1/1, model 13/25 ## ✓ Fold4: preprocessor 1/1, model 13/25 ## i Fold4: preprocessor 1/1, model 13/25 (predictions) ## i Fold4: preprocessor 1/1, model 14/25 ## ✓ Fold4: preprocessor 1/1, model 14/25 ## i Fold4: preprocessor 1/1, model 14/25 (predictions) ## i Fold4: preprocessor 1/1, model 15/25 ## ✓ Fold4: preprocessor 1/1, model 15/25 ## i Fold4: preprocessor 1/1, model 15/25 (predictions) ## i Fold4: preprocessor 1/1, model 16/25 ## ✓ Fold4: preprocessor 1/1, model 16/25 ## i Fold4: preprocessor 1/1, model 16/25 (predictions) ## i Fold4: preprocessor 1/1, model 17/25 ## ✓ Fold4: preprocessor 1/1, model 17/25 ## i Fold4: preprocessor 1/1, model 17/25 (predictions) ## i Fold4: preprocessor 1/1, model 18/25 ## ✓ Fold4: preprocessor 1/1, model 18/25 ## i Fold4: preprocessor 1/1, model 18/25 (predictions) ## i Fold4: preprocessor 1/1, model 19/25 ## ✓ Fold4: preprocessor 1/1, model 19/25 ## i Fold4: preprocessor 1/1, model 19/25 (predictions) ## i Fold4: preprocessor 1/1, model 20/25 ## ✓ Fold4: preprocessor 1/1, model 20/25 ## i Fold4: preprocessor 1/1, model 20/25 (predictions) ## i Fold4: preprocessor 1/1, model 21/25 ## ✓ Fold4: preprocessor 1/1, model 21/25 ## i Fold4: preprocessor 1/1, model 21/25 (predictions) ## i Fold4: preprocessor 1/1, model 22/25 ## ✓ Fold4: preprocessor 1/1, model 22/25 ## i Fold4: preprocessor 1/1, model 22/25 (predictions) ## i Fold4: preprocessor 1/1, model 23/25 ## ✓ Fold4: preprocessor 1/1, model 23/25 ## i Fold4: preprocessor 1/1, model 23/25 (predictions) ## i Fold4: preprocessor 1/1, model 24/25 ## ✓ Fold4: preprocessor 1/1, model 24/25 ## i Fold4: preprocessor 1/1, model 24/25 (predictions) ## i Fold4: preprocessor 1/1, model 25/25 ## ✓ Fold4: preprocessor 1/1, model 25/25 ## i Fold4: preprocessor 1/1, model 25/25 (predictions) ## i Fold5: preprocessor 1/1 ## ✓ Fold5: preprocessor 1/1 ## i Fold5: preprocessor 1/1, model 1/25 ## ✓ Fold5: preprocessor 1/1, model 1/25 ## i Fold5: preprocessor 1/1, model 1/25 (predictions) ## i Fold5: preprocessor 1/1, model 2/25 ## ✓ Fold5: preprocessor 1/1, model 2/25 ## i Fold5: preprocessor 1/1, model 2/25 (predictions) ## i Fold5: preprocessor 1/1, model 3/25 ## ✓ Fold5: preprocessor 1/1, model 3/25 ## i Fold5: preprocessor 1/1, model 3/25 (predictions) ## i Fold5: preprocessor 1/1, model 4/25 ## ✓ Fold5: preprocessor 1/1, model 4/25 ## i Fold5: preprocessor 1/1, model 4/25 (predictions) ## i Fold5: preprocessor 1/1, model 5/25 ## ✓ Fold5: preprocessor 1/1, model 5/25 ## i Fold5: preprocessor 1/1, model 5/25 (predictions) ## i Fold5: preprocessor 1/1, model 6/25 ## ✓ Fold5: preprocessor 1/1, model 6/25 ## i Fold5: preprocessor 1/1, model 6/25 (predictions) ## i Fold5: preprocessor 1/1, model 7/25 ## ✓ Fold5: preprocessor 1/1, model 7/25 ## i Fold5: preprocessor 1/1, model 7/25 (predictions) ## i Fold5: preprocessor 1/1, model 8/25 ## ✓ Fold5: preprocessor 1/1, model 8/25 ## i Fold5: preprocessor 1/1, model 8/25 (predictions) ## i Fold5: preprocessor 1/1, model 9/25 ## ✓ Fold5: preprocessor 1/1, model 9/25 ## i Fold5: preprocessor 1/1, model 9/25 (predictions) ## i Fold5: preprocessor 1/1, model 10/25 ## ✓ Fold5: preprocessor 1/1, model 10/25 ## i Fold5: preprocessor 1/1, model 10/25 (predictions) ## i Fold5: preprocessor 1/1, model 11/25 ## ✓ Fold5: preprocessor 1/1, model 11/25 ## i Fold5: preprocessor 1/1, model 11/25 (predictions) ## i Fold5: preprocessor 1/1, model 12/25 ## ✓ Fold5: preprocessor 1/1, model 12/25 ## i Fold5: preprocessor 1/1, model 12/25 (predictions) ## i Fold5: preprocessor 1/1, model 13/25 ## ✓ Fold5: preprocessor 1/1, model 13/25 ## i Fold5: preprocessor 1/1, model 13/25 (predictions) ## i Fold5: preprocessor 1/1, model 14/25 ## ✓ Fold5: preprocessor 1/1, model 14/25 ## i Fold5: preprocessor 1/1, model 14/25 (predictions) ## i Fold5: preprocessor 1/1, model 15/25 ## ✓ Fold5: preprocessor 1/1, model 15/25 ## i Fold5: preprocessor 1/1, model 15/25 (predictions) ## i Fold5: preprocessor 1/1, model 16/25 ## ✓ Fold5: preprocessor 1/1, model 16/25 ## i Fold5: preprocessor 1/1, model 16/25 (predictions) ## i Fold5: preprocessor 1/1, model 17/25 ## ✓ Fold5: preprocessor 1/1, model 17/25 ## i Fold5: preprocessor 1/1, model 17/25 (predictions) ## i Fold5: preprocessor 1/1, model 18/25 ## ✓ Fold5: preprocessor 1/1, model 18/25 ## i Fold5: preprocessor 1/1, model 18/25 (predictions) ## i Fold5: preprocessor 1/1, model 19/25 ## ✓ Fold5: preprocessor 1/1, model 19/25 ## i Fold5: preprocessor 1/1, model 19/25 (predictions) ## i Fold5: preprocessor 1/1, model 20/25 ## ✓ Fold5: preprocessor 1/1, model 20/25 ## i Fold5: preprocessor 1/1, model 20/25 (predictions) ## i Fold5: preprocessor 1/1, model 21/25 ## ✓ Fold5: preprocessor 1/1, model 21/25 ## i Fold5: preprocessor 1/1, model 21/25 (predictions) ## i Fold5: preprocessor 1/1, model 22/25 ## ✓ Fold5: preprocessor 1/1, model 22/25 ## i Fold5: preprocessor 1/1, model 22/25 (predictions) ## i Fold5: preprocessor 1/1, model 23/25 ## ✓ Fold5: preprocessor 1/1, model 23/25 ## i Fold5: preprocessor 1/1, model 23/25 (predictions) ## i Fold5: preprocessor 1/1, model 24/25 ## ✓ Fold5: preprocessor 1/1, model 24/25 ## i Fold5: preprocessor 1/1, model 24/25 (predictions) ## i Fold5: preprocessor 1/1, model 25/25 ## ✓ Fold5: preprocessor 1/1, model 25/25 ## i Fold5: preprocessor 1/1, model 25/25 (predictions) ## i Fold6: preprocessor 1/1 ## ✓ Fold6: preprocessor 1/1 ## i Fold6: preprocessor 1/1, model 1/25 ## ✓ Fold6: preprocessor 1/1, model 1/25 ## i Fold6: preprocessor 1/1, model 1/25 (predictions) ## i Fold6: preprocessor 1/1, model 2/25 ## ✓ Fold6: preprocessor 1/1, model 2/25 ## i Fold6: preprocessor 1/1, model 2/25 (predictions) ## i Fold6: preprocessor 1/1, model 3/25 ## ✓ Fold6: preprocessor 1/1, model 3/25 ## i Fold6: preprocessor 1/1, model 3/25 (predictions) ## i Fold6: preprocessor 1/1, model 4/25 ## ✓ Fold6: preprocessor 1/1, model 4/25 ## i Fold6: preprocessor 1/1, model 4/25 (predictions) ## i Fold6: preprocessor 1/1, model 5/25 ## ✓ Fold6: preprocessor 1/1, model 5/25 ## i Fold6: preprocessor 1/1, model 5/25 (predictions) ## i Fold6: preprocessor 1/1, model 6/25 ## ✓ Fold6: preprocessor 1/1, model 6/25 ## i Fold6: preprocessor 1/1, model 6/25 (predictions) ## i Fold6: preprocessor 1/1, model 7/25 ## ✓ Fold6: preprocessor 1/1, model 7/25 ## i Fold6: preprocessor 1/1, model 7/25 (predictions) ## i Fold6: preprocessor 1/1, model 8/25 ## ✓ Fold6: preprocessor 1/1, model 8/25 ## i Fold6: preprocessor 1/1, model 8/25 (predictions) ## i Fold6: preprocessor 1/1, model 9/25 ## ✓ Fold6: preprocessor 1/1, model 9/25 ## i Fold6: preprocessor 1/1, model 9/25 (predictions) ## i Fold6: preprocessor 1/1, model 10/25 ## ✓ Fold6: preprocessor 1/1, model 10/25 ## i Fold6: preprocessor 1/1, model 10/25 (predictions) ## i Fold6: preprocessor 1/1, model 11/25 ## ✓ Fold6: preprocessor 1/1, model 11/25 ## i Fold6: preprocessor 1/1, model 11/25 (predictions) ## i Fold6: preprocessor 1/1, model 12/25 ## ✓ Fold6: preprocessor 1/1, model 12/25 ## i Fold6: preprocessor 1/1, model 12/25 (predictions) ## i Fold6: preprocessor 1/1, model 13/25 ## ✓ Fold6: preprocessor 1/1, model 13/25 ## i Fold6: preprocessor 1/1, model 13/25 (predictions) ## i Fold6: preprocessor 1/1, model 14/25 ## ✓ Fold6: preprocessor 1/1, model 14/25 ## i Fold6: preprocessor 1/1, model 14/25 (predictions) ## i Fold6: preprocessor 1/1, model 15/25 ## ✓ Fold6: preprocessor 1/1, model 15/25 ## i Fold6: preprocessor 1/1, model 15/25 (predictions) ## i Fold6: preprocessor 1/1, model 16/25 ## ✓ Fold6: preprocessor 1/1, model 16/25 ## i Fold6: preprocessor 1/1, model 16/25 (predictions) ## i Fold6: preprocessor 1/1, model 17/25 ## ✓ Fold6: preprocessor 1/1, model 17/25 ## i Fold6: preprocessor 1/1, model 17/25 (predictions) ## i Fold6: preprocessor 1/1, model 18/25 ## ✓ Fold6: preprocessor 1/1, model 18/25 ## i Fold6: preprocessor 1/1, model 18/25 (predictions) ## i Fold6: preprocessor 1/1, model 19/25 ## ✓ Fold6: preprocessor 1/1, model 19/25 ## i Fold6: preprocessor 1/1, model 19/25 (predictions) ## i Fold6: preprocessor 1/1, model 20/25 ## ✓ Fold6: preprocessor 1/1, model 20/25 ## i Fold6: preprocessor 1/1, model 20/25 (predictions) ## i Fold6: preprocessor 1/1, model 21/25 ## ✓ Fold6: preprocessor 1/1, model 21/25 ## i Fold6: preprocessor 1/1, model 21/25 (predictions) ## i Fold6: preprocessor 1/1, model 22/25 ## ✓ Fold6: preprocessor 1/1, model 22/25 ## i Fold6: preprocessor 1/1, model 22/25 (predictions) ## i Fold6: preprocessor 1/1, model 23/25 ## ✓ Fold6: preprocessor 1/1, model 23/25 ## i Fold6: preprocessor 1/1, model 23/25 (predictions) ## i Fold6: preprocessor 1/1, model 24/25 ## ✓ Fold6: preprocessor 1/1, model 24/25 ## i Fold6: preprocessor 1/1, model 24/25 (predictions) ## i Fold6: preprocessor 1/1, model 25/25 ## ✓ Fold6: preprocessor 1/1, model 25/25 ## i Fold6: preprocessor 1/1, model 25/25 (predictions) PR_tune ## # Tuning results ## # 6-fold cross-validation using stratification  ## # A tibble: 6 × 4 ##   splits           id    .metrics          .notes           ##   <list>           <chr> <list>            <list>           ## 1 <split [126/26]> Fold1 <tibble [25 × 6]> <tibble [0 × 3]> ## 2 <split [126/26]> Fold2 <tibble [25 × 6]> <tibble [0 × 3]> ## 3 <split [126/26]> Fold3 <tibble [25 × 6]> <tibble [0 × 3]> ## 4 <split [126/26]> Fold4 <tibble [25 × 6]> <tibble [0 × 3]> ## 5 <split [128/24]> Fold5 <tibble [25 × 6]> <tibble [0 × 3]> ## 6 <split [128/24]> Fold6 <tibble [25 × 6]> <tibble [0 × 3]> PR_tune %>%   show_best() ## # A tibble: 5 × 8 ##    mtry trees .metric .estimator  mean     n std_err .config               ##   <int> <int> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                 ## 1   120  1787 roc_auc binary     0.992     6 0.00794 Preprocessor1_Model25 ## 2    61  1147 roc_auc binary     0.990     6 0.00952 Preprocessor1_Model24 ## 3   261  1694 roc_auc binary     0.984     6 0.0159  Preprocessor1_Model08 ## 4   358   752 roc_auc binary     0.983     6 0.0175  Preprocessor1_Model19 ## 5   406   504 roc_auc binary     0.979     6 0.0206  Preprocessor1_Model14 PR_best <- PR_tune %>%   select_best(\"roc_auc\")  PR_best ## # A tibble: 1 × 3 ##    mtry trees .config               ##   <int> <int> <chr>                 ## 1   120  1787 Preprocessor1_Model25 PR_final_wf <- PR_wf %>%    update_model(rand_forest(trees = PR_best$trees,                            mtry = PR_best$mtry) %>%                  set_mode(\"classification\") %>%                  set_engine(\"ranger\",                             importance = \"impurity\"))  PR_final_fit <-    PR_final_wf %>%   last_fit(PR_split)  PR_final_fit %>%   collect_metrics() ## # A tibble: 2 × 4 ##   .metric  .estimator .estimate .config              ##   <chr>    <chr>          <dbl> <chr>                ## 1 accuracy binary         0.949 Preprocessor1_Model1 ## 2 roc_auc  binary         0.996 Preprocessor1_Model1 library(vip) ##  ## Attaching package: 'vip' ## The following object is masked from 'package:utils': ##  ##     vi PR_final_fit %>%    extract_fit_parsnip() %>%    vip(num_features = 20) PR_final_wf2 <- PR_wf %>%    update_model(rand_forest(trees = PR_best$trees,                            mtry = PR_best$mtry) %>%                  set_mode(\"classification\") %>%                  set_engine(\"ranger\",                             importance = \"permutation\"))  PR_final_wf2 %>%   last_fit(PR_split) %>%   extract_fit_parsnip() %>%    vip(num_features = 30)"},{"path":"https://rdinnager.github.io/fofpack/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Russell Dinnage. Author, maintainer.","code":""},{"path":"https://rdinnager.github.io/fofpack/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dinnage R (2022). fofpack: Forest Future Course Package. R package version 0.0.0.9010, https://rdinnager.github.io/fofpack/.","code":"@Manual{,   title = {fofpack: Forest of the Future Course Package},   author = {Russell Dinnage},   year = {2022},   note = {R package version 0.0.0.9010},   url = {https://rdinnager.github.io/fofpack/}, }"},{"path":"https://rdinnager.github.io/fofpack/reference/access_exam.html","id":null,"dir":"Reference","previous_headings":"","what":"Access an exam with a password — access_exam","title":"Access an exam with a password — access_exam","text":"Access exam password","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/access_exam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access an exam with a password — access_exam","text":"","code":"access_exam(exam_name)"},{"path":"https://rdinnager.github.io/fofpack/reference/access_exam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access an exam with a password — access_exam","text":"exam_name Name exam want access (given class, along password)","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/access_exam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access an exam with a password — access_exam","text":"","code":"access_exam(\"practice_1\") #> Error: RStudio not running"},{"path":"https://rdinnager.github.io/fofpack/reference/check_exam_avail.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an exam is available in the fofpack package — check_exam_avail","title":"Check if an exam is available in the fofpack package — check_exam_avail","text":"Check exam available fofpack package","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/check_exam_avail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an exam is available in the fofpack package — check_exam_avail","text":"","code":"check_exam_avail(exam_name)"},{"path":"https://rdinnager.github.io/fofpack/reference/check_exam_avail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an exam is available in the fofpack package — check_exam_avail","text":"exam_name Name exam check , e.g. \"exam_1\"","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/check_exam_avail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an exam is available in the fofpack package — check_exam_avail","text":"TRUE invisibly exam available, FALSE otherwise","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/check_exam_avail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an exam is available in the fofpack package — check_exam_avail","text":"","code":"check_exam(\"exam_1\") #> Error in check_exam(\"exam_1\"): could not find function \"check_exam\""},{"path":"https://rdinnager.github.io/fofpack/reference/convert_hash_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a submitted hash code to a learnr document\nfor marking — convert_hash_code","title":"Convert a submitted hash code to a learnr document\nfor marking — convert_hash_code","text":"Convert submitted hash code learnr document marking","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/convert_hash_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a submitted hash code to a learnr document\nfor marking — convert_hash_code","text":"","code":"convert_hash_code(   hash_code,   assignment_path,   rmd_path = tempfile(fileext = \".Rmd\"),   student = \"Test student\",   run = TRUE )"},{"path":"https://rdinnager.github.io/fofpack/reference/convert_hash_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a submitted hash code to a learnr document\nfor marking — convert_hash_code","text":"hash_code Character. hash code convert assignment_path Path assignment .Rmd","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/fofpack-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fofpack: Forest of the Future Course Package — fofpack-package","title":"fofpack: Forest of the Future Course Package — fofpack-package","text":"Course material FIU course 'Forest Future'","code":""},{"path":[]},{"path":"https://rdinnager.github.io/fofpack/reference/fofpack-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fofpack: Forest of the Future Course Package — fofpack-package","text":"Maintainer: Russell Dinnage rdinnage@fiu.edu (ORCID)","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/fofpack_up_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if fofpack is up to date. — fofpack_up_to_date","title":"Check if fofpack is up to date. — fofpack_up_to_date","text":"Always make sure fofpack date starting assignment!","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/fofpack_up_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if fofpack is up to date. — fofpack_up_to_date","text":"","code":"fofpack_up_to_date()"},{"path":"https://rdinnager.github.io/fofpack/reference/fofpack_up_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if fofpack is up to date. — fofpack_up_to_date","text":"Invisibly returns TRUE fofpack date, FALSE otherwise","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/fofpack_up_to_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if fofpack is up to date. — fofpack_up_to_date","text":"","code":"fofpack_up_to_date() #> package is up-to-date devel version #> package is up-to-date devel version #> Everything looks up to date for fofpack!"},{"path":"https://rdinnager.github.io/fofpack/reference/send_env_to_RStudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Send an environment to RStudio Session — send_env_to_RStudio","title":"Send an environment to RStudio Session — send_env_to_RStudio","text":"Send environment RStudio Session","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/send_env_to_RStudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send an environment to RStudio Session — send_env_to_RStudio","text":"","code":"send_env_to_RStudio(env_from, remove = \"dput_to_string\")"},{"path":"https://rdinnager.github.io/fofpack/reference/send_env_to_RStudio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send an environment to RStudio Session — send_env_to_RStudio","text":"env_from environment send","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/send_env_to_RStudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send an environment to RStudio Session — send_env_to_RStudio","text":"Nothing","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/set_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Synchronise an environment with another — set_env","title":"Synchronise an environment with another — set_env","text":"function takes everything environment puts another, replacing existing object names.","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/set_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synchronise an environment with another — set_env","text":"","code":"set_env(env_from, env_to = rlang::global_env())"},{"path":"https://rdinnager.github.io/fofpack/reference/set_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synchronise an environment with another — set_env","text":"env_from environment synchronise env_to environment synchronise","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/set_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synchronise an environment with another — set_env","text":"Nothing","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/submission_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Tutorial submission functions — submission_server","title":"Tutorial submission functions — submission_server","text":"following functions modified code github repo https://github.com/mattblackwell/qsslearnr Versions appear proliferated around github idea originally wrote submission system. happen know, please let know. versions begin preamble reproduce well: following function modified Colin Rundel's learnrhash package, available https://github.com/rundel/learnrhash. Many thanks Professor Rundel, developed fantastic tool courses teach R use learnr package. note also modified Professor Rundel's description: Note including functions learnr Rmd document necessary server function, submission_server(), included R chunk context=\"server\". Conversely, ui functions, *_ui(), must included R chunk context.","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/submission_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tutorial submission functions — submission_server","text":"","code":"submission_server(input, output)  submission_ui"},{"path":"https://rdinnager.github.io/fofpack/reference/submission_functions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tutorial submission functions — submission_server","text":"object class shiny.tag length 3.","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/write_answers.html","id":null,"dir":"Reference","previous_headings":"","what":"Write your submitted answers from the assignment to a text file — write_answers","title":"Write your submitted answers from the assignment to a text file — write_answers","text":"function longer required new submission system incorporated directly assignments.","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/write_answers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write your submitted answers from the assignment to a text file — write_answers","text":"","code":"write_answers(week, where = getwd())"},{"path":"https://rdinnager.github.io/fofpack/reference/write_answers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write your submitted answers from the assignment to a text file — write_answers","text":"week week's assignment want answers ? numeric. want ? , directory computer want write text file. Defaults working directory.","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/write_answers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write your submitted answers from the assignment to a text file — write_answers","text":"path text file answers","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/write_answers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write your submitted answers from the assignment to a text file — write_answers","text":"Get text file answers assignment can upload Canvas.","code":""},{"path":"https://rdinnager.github.io/fofpack/reference/write_answers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write your submitted answers from the assignment to a text file — write_answers","text":"","code":"write_answers(3) #> Error in write_answers(3): Sorry, answers for week 3 cannot be found."}]
